{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mend166\\\\Documents\\\\GitHub\\\\glm_viz\\\\vis_n_react\\\\client\\\\src\\\\App\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"./Graph.css\";\nimport { Network } from 'vis-network';\nimport { DataSet } from 'vis-data';\nimport SearchBar from './SearchBar';\nimport '../styles/vis-network.css';\nimport Legend from './Legend';\nimport loadImg from '../imgs/load.png';\nimport capacitorImg from '../imgs/capacitor.jpg';\nimport inverterImg from '../imgs/inverter.png';\nimport meterImg from '../imgs/meter.jpg';\nimport substationImg from '../imgs/substation.jpg';\nimport generatorImg from '../imgs/generator.jpg';\nimport nodeImg from '../imgs/node.png';\nimport IEE_DF from '../data/IEEE-123_Dynamic_fixed.json';\nimport IEE_INVF from '../data/IEEE-123_Inverters_fixed.json';\nimport IEE_GENF from '../data/IEEE-123_Diesels_fixed.json';\n\n// import IEEE_NFH from '../data/9500/IEEE_9500.json';\n// import IEEE_INV from '../data/9500/Inverters.json'\n// import IEEE_GEN from '../data/9500/Rotating_Machines.json'\n\n// const dataFiles = [IEEE_NFH, IEEE_INV, IEEE_GEN];\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataFiles = [IEE_DF, IEE_INVF, IEE_GENF];\nvar glmNetwork = null;\nvar counter = -1;\nconst options = {\n  edges: {\n    smooth: {\n      enabled: true,\n      type: \"dynamic\"\n    }\n  },\n  nodes: {\n    shapeProperties: {\n      interpolation: false\n    }\n  },\n  groups: {\n    load: {\n      \"color\": \"#2a9d8f\",\n      \"size\": 25,\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": loadImg\n    },\n    triplex_load: {\n      \"color\": \"#ffea00\",\n      \"size\": 25,\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": loadImg\n    },\n    capacitor: {\n      \"color\": \"#283618\",\n      \"size\": 25,\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": capacitorImg\n    },\n    triplex_node: {\n      \"color\": \"#003566\",\n      \"size\": 25,\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": nodeImg\n    },\n    substation: {\n      \"color\": \"#fca311\",\n      \"size\": 25,\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": substationImg\n    },\n    triplex_meter: {\n      \"color\": \"#072ac8\",\n      \"size\": 25,\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": meterImg\n    },\n    node: {\n      \"color\": \"#4361ee\",\n      \"size\": 25,\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": nodeImg\n    },\n    meter: {\n      \"color\": \"#d90429\",\n      \"size\": 25,\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": meterImg\n    },\n    inverter: {\n      \"color\": \"#c8b6ff\",\n      \"size\": 25,\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": inverterImg\n    },\n    generator: {\n      \"color\": \"#fee440\",\n      \"size\": 25,\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": generatorImg\n    }\n  },\n  interaction: {\n    hover: true,\n    hideEdgesOnDrag: true,\n    hideEdgesOnZoom: true,\n    navigationButtons: true\n  },\n  physics: {\n    barnesHut: {\n      gravitationalConstant: -80000,\n      springLength: 200,\n      springConstant: 0.50\n    },\n    maxVelocity: 150,\n    minVelocity: 0.75,\n    solver: 'barnesHut',\n    stabilization: {\n      enabled: true,\n      iterations: 1000,\n      updateInterval: 1,\n      onlyDynamicEdges: false,\n      fit: true\n    }\n  }\n};\nconst edgeTypes = [\"overhead_line\", \"switch\", \"underground_line\", \"series_reactor\", \"triplex_line\", \"regulator\", \"transformer\"];\nconst nodeTypes = [\"load\", \"triplex_load\", \"capacitor\", \"node\", \"triplex_node\", \"substation\", \"meter\", \"triplex_meter\", \"inverter_dyn\", \"inverter\", \"diesel_dg\"];\nconst parent_child_edge_types = [\"capacitor\", \"triplex_meter\", \"triplex_load\", \"meter\"];\nconst nodeOptions = new Map([[\"load\", {\n  \"group\": \"load\"\n}], [\"triplex_load\", {\n  \"group\": \"triplex_load\"\n}], [\"capacitor\", {\n  \"group\": \"capacitor\"\n}], [\"triplex_node\", {\n  \"group\": \"triplex_node\"\n}], [\"substation\", {\n  \"group\": \"substation\"\n}], [\"triplex_meter\", {\n  \"group\": \"triplex_meter\"\n}], [\"node\", {\n  \"group\": \"node\"\n}], [\"meter\", {\n  \"group\": \"meter\"\n}], [\"inverter\", {\n  \"group\": \"inverter\"\n}], [\"inverter_dyn\", {\n  \"group\": \"inverter\"\n}], [\"diesel_dg\", {\n  \"group\": \"generator\"\n}]]);\nconst edgeOptions = new Map([[\"overhead_line\", {\n  \"width\": 4,\n  \"color\": \"#000000\"\n}], [\"switch\", {\n  \"width\": 4,\n  \"color\": \"#3a0ca3\"\n}], [\"series_reactor\", {\n  \"width\": 4,\n  \"color\": \"#8c0000\"\n}], [\"triplex_line\", {\n  \"width\": 4,\n  \"color\": \"#c86bfa\"\n}], [\"underground_line\", {\n  \"width\": 4,\n  \"color\": \"#FFFF00\"\n}], [\"regulator\", {\n  \"width\": 4,\n  \"color\": \"#ff447d\"\n}], [\"transformer\", {\n  \"width\": 4,\n  \"color\": \"#00FF00\"\n}]]);\nvar nodes = [];\nfor (let file of dataFiles) {\n  var objs = file.objects;\n  for (let obj of objs) {\n    var objectType = obj.name.includes(\":\") ? obj.name.split(\":\")[0] : obj.name;\n    var attributes = obj.attributes;\n    if (nodeTypes.includes(objectType)) {\n      var nodeID = attributes.name;\n      nodes.push({\n        id: nodeID,\n        label: nodeID,\n        attributes: attributes,\n        group: nodeOptions.get(objectType).group,\n        title: \"Object Type: \" + objectType + \"\\n\" + getTitle(attributes)\n      });\n    }\n  }\n}\nvar nodesDataSet = new DataSet(nodes);\nconst edges = [];\nfor (let file of dataFiles) {\n  objs = file.objects;\n  for (let obj of objs) {\n    objectType = obj.name.includes(\":\") ? obj.name.split(\":\")[0] : obj.name;\n    attributes = obj.attributes;\n    if (edgeTypes.includes(objectType)) {\n      var edgeFrom = attributes.from.includes(\":\") ? attributes.from.split(\":\")[1] : attributes.from;\n      var edgeTo = attributes.to.includes(\":\") ? attributes.to.split(\":\")[1] : attributes.to;\n      var edgeID = obj.name.includes(\":\") ? obj.name : objectType + \":\" + attributes.name;\n      edges.push({\n        from: edgeFrom,\n        to: edgeTo,\n        id: edgeID,\n        color: edgeOptions.get(objectType).color,\n        width: edgeOptions.get(objectType).width,\n        title: \"Object Type: \" + objectType + \"\\n\" + getTitle(attributes)\n      });\n    } else if (parent_child_edge_types.includes(objectType)) {\n      nodeID = attributes.name;\n      var parent = attributes.parent;\n      if (parent !== undefined) {\n        edges.push({\n          from: parent,\n          to: nodeID,\n          color: {\n            inherit: true\n          }\n        });\n      }\n    } else if (nodeTypes.includes(objectType)) {\n      nodeID = attributes.name;\n      parent = attributes.parent;\n      if (parent !== undefined) {\n        edges.push({\n          from: parent,\n          to: nodeID,\n          color: {\n            inherit: true\n          }\n        });\n      }\n    }\n  }\n}\nvar edgesDataSet = new DataSet(edges);\nconst data = {\n  nodes: nodesDataSet,\n  edges: edgesDataSet\n};\nfunction TogglePhysics(toggle) {\n  if (toggle) {\n    glmNetwork.setOptions({\n      physics: {\n        enabled: true\n      }\n    });\n  } else {\n    glmNetwork.setOptions({\n      physics: {\n        enabled: false\n      }\n    });\n  }\n}\n_c = TogglePhysics;\nfunction Reset() {\n  let nodeItems = data.nodes.map(n => {\n    if (n.color) {\n      delete n.color;\n      return n;\n    } else if (n.size) {\n      delete n.size;\n      return n;\n    }\n  });\n  let edgeItems = data.edges.map(e => {\n    if (e.width === 20) {\n      e.width = 4;\n      return e;\n    }\n    if (edgeTypes.includes(e.id.split(\":\")[0])) {\n      e.color = edgeOptions.get(e.id.split(\":\")[0]).color;\n      e.width = edgeOptions.get(e.id.split(\":\")[0]).width;\n      return e;\n    } else {\n      e.color = {\n        inherit: true\n      };\n      return e;\n    }\n  });\n  data.nodes.update(nodeItems);\n  data.edges.update(edgeItems);\n  glmNetwork.fit();\n  counter = 0;\n}\n_c2 = Reset;\nfunction Prev() {\n  var options = {\n    scale: 1,\n    animation: {\n      duration: 1000,\n      easing: \"easeInOutQuart\"\n    }\n  };\n  var prev = data.nodes.get({\n    filter: function (n) {\n      return n.size === 50;\n    }\n  });\n  counter--;\n  if (counter < 0) {\n    counter = prev.length - 1;\n  }\n  glmNetwork.focus(prev[counter].id, options);\n}\n_c3 = Prev;\nfunction Next() {\n  var options = {\n    scale: 1,\n    animation: {\n      duration: 1000,\n      easing: \"easeInOutQuart\"\n    }\n  };\n  var nxt = data.nodes.get({\n    filter: function (n) {\n      return n.size === 50;\n    }\n  });\n  counter++;\n  if (counter >= nxt.length) {\n    counter = 0;\n    glmNetwork.focus(nxt[counter].id, options);\n  } else {\n    glmNetwork.focus(nxt[counter].id, options);\n  }\n}\n_c4 = Next;\nfunction NodeFocus(nodeID) {\n  var options = {\n    scale: 1,\n    animation: {\n      duration: 1000,\n      easing: \"easeInOutQuart\"\n    }\n  };\n  glmNetwork.focus(nodeID, options);\n}\n_c5 = NodeFocus;\nfunction HighlightGroup(group) {\n  var nodesMap = data.nodes.map(n => {\n    if (n.group === group) {\n      delete n.color;\n      n.size = 50;\n      return n;\n    } else {\n      delete n.size;\n      n.color = \"lightgrey\";\n      return n;\n    }\n  });\n  var edgesMap = data.edges.map(e => {\n    if (!(e.width === 20)) e.color = 'lightgrey';\n    return e;\n  });\n  data.nodes.update(nodesMap);\n  data.edges.update(edgesMap);\n}\n_c6 = HighlightGroup;\nfunction HighlightEdges(edgeID) {\n  let nodeItems = data.nodes.map(n => {\n    if (!(n.size === 50)) {\n      n.color = \"lightgrey\";\n    }\n    return n;\n  });\n  let edgeItems = data.edges.map(e => {\n    if (e.id.split(\":\")[0] === edgeID) {\n      e.color = edgeOptions.get(edgeID).color;\n      e.width = 20;\n      return e;\n    } else {\n      e.color = \"lightgrey\";\n      e.width = 4;\n      return e;\n    }\n  });\n  data.nodes.update(nodeItems);\n  data.edges.update(edgeItems);\n}\n_c7 = HighlightEdges;\nfunction getTitle(attributes) {\n  let str = \"\";\n  for (let [k, v] of Object.entries(attributes)) {\n    str = str + k + \": \" + v + \"\\n\";\n  }\n  return str;\n}\nconst Graph = props => {\n  _s();\n  const container = useRef(null);\n  const [nodeToEdit, setNodeToEdit] = useState({});\n  function setNodeEdit(node_id) {\n    var node = data.nodes.get(node_id);\n    setNodeToEdit(node);\n  }\n  function closePopUp() {\n    document.getElementById(\"node-saveButton\").onclick = null;\n    document.getElementById(\"node-closeButton\").onclick = null;\n    document.getElementById(\"node-popUp\").style.display = \"none\";\n  }\n  function saveEdits() {\n    var node = data.nodes.get(nodeToEdit.id);\n    node.attributes = nodeToEdit.attributes;\n    node.title = getTitle(node.attributes);\n    data.nodes.update(node);\n  }\n  useEffect(() => {\n    if (props.display === \"block\") {\n      document.getElementById(\"networks-wrapper\").style.display = props.display;\n      glmNetwork = new Network(container.current, data, options);\n      glmNetwork.on(\"stabilizationProgress\", function (params) {\n        var maxWidth = 360;\n        var minWidth = 1;\n        var widthFactor = params.iterations / params.total;\n        var width = Math.max(minWidth, maxWidth * widthFactor);\n        document.getElementById(\"circularProgress\").style.background = \"conic-gradient(#b25a00 \" + width + \"deg, #333 0deg)\";\n        document.getElementById(\"progressValue\").innerText = Math.round(widthFactor * 100) + \"%\";\n      });\n      glmNetwork.once(\"stabilizationIterationsDone\", function () {\n        document.getElementById(\"circularProgress\").style.background = \"conic-gradient(#b25a00 360deg, #333 0deg)\";\n        document.getElementById(\"progressValue\").innerText = \"100%\";\n        document.getElementById(\"circularProgress\").style.opacity = 0.7;\n        setTimeout(function () {\n          document.getElementById(\"circularProgress\").style.display = \"none\";\n        }, 500);\n        glmNetwork.setOptions({\n          physics: {\n            enabled: false\n          }\n        });\n      });\n      glmNetwork.on(\"doubleClick\", function (params) {\n        if (params.nodes[0] === undefined) {\n          alert(\"Double Click on a Node to edit\");\n        } else {\n          setNodeEdit(params.nodes[0]);\n          document.getElementById(\"node-popUp\").style.display = \"block\";\n        }\n      });\n    }\n  }, [container, props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      data: data.nodes,\n      togglePhy: TogglePhysics,\n      reset: Reset,\n      onFind: NodeFocus,\n      prev: Prev,\n      next: Next\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"node-popUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"node-operation\",\n        children: \"Edit Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          \"margin\": \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(nodeToEdit.attributes === undefined ? {} : nodeToEdit.attributes).map((_ref, index) => {\n            let [key, val] = _ref;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: val,\n                  onChange: e => {\n                    setNodeToEdit({\n                      ...nodeToEdit,\n                      attributes: {\n                        ...nodeToEdit.attributes,\n                        [key]: e.target.value\n                      }\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"save\",\n        id: \"node-saveButton\",\n        onClick: saveEdits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Close\",\n        id: \"node-closeButton\",\n        onClick: closePopUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"networks-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-network\",\n        ref: container\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"circularProgress\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"progressValue\",\n          children: \"0%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        findGroup: HighlightGroup,\n        findEdges: HighlightEdges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Graph, \"04k97il2FLj4pWH/MZ/3bt7m6wo=\");\n_c8 = Graph;\nexport default Graph;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"TogglePhysics\");\n$RefreshReg$(_c2, \"Reset\");\n$RefreshReg$(_c3, \"Prev\");\n$RefreshReg$(_c4, \"Next\");\n$RefreshReg$(_c5, \"NodeFocus\");\n$RefreshReg$(_c6, \"HighlightGroup\");\n$RefreshReg$(_c7, \"HighlightEdges\");\n$RefreshReg$(_c8, \"Graph\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Network","DataSet","SearchBar","Legend","loadImg","capacitorImg","inverterImg","meterImg","substationImg","generatorImg","nodeImg","IEE_DF","IEE_INVF","IEE_GENF","dataFiles","glmNetwork","counter","options","edges","smooth","enabled","type","nodes","shapeProperties","interpolation","groups","load","triplex_load","capacitor","triplex_node","substation","triplex_meter","node","meter","inverter","generator","interaction","hover","hideEdgesOnDrag","hideEdgesOnZoom","navigationButtons","physics","barnesHut","gravitationalConstant","springLength","springConstant","maxVelocity","minVelocity","solver","stabilization","iterations","updateInterval","onlyDynamicEdges","fit","edgeTypes","nodeTypes","parent_child_edge_types","nodeOptions","Map","edgeOptions","file","objs","objects","obj","objectType","name","includes","split","attributes","nodeID","push","id","label","group","get","title","getTitle","nodesDataSet","edgeFrom","from","edgeTo","to","edgeID","color","width","parent","undefined","inherit","edgesDataSet","data","TogglePhysics","toggle","setOptions","Reset","nodeItems","map","n","size","edgeItems","e","update","Prev","scale","animation","duration","easing","prev","filter","length","focus","Next","nxt","NodeFocus","HighlightGroup","nodesMap","edgesMap","HighlightEdges","str","k","v","Object","entries","Graph","props","container","nodeToEdit","setNodeToEdit","setNodeEdit","node_id","closePopUp","document","getElementById","onclick","style","display","saveEdits","current","on","params","maxWidth","minWidth","widthFactor","total","Math","max","background","innerText","round","once","opacity","setTimeout","alert","index","key","val","target","value"],"sources":["C:/Users/mend166/Documents/GitHub/glm_viz/vis_n_react/client/src/App/Graph.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport \"./Graph.css\"\r\nimport {Network} from 'vis-network';\r\nimport { DataSet } from 'vis-data';\r\nimport SearchBar from './SearchBar';\r\nimport '../styles/vis-network.css';\r\nimport Legend from './Legend';\r\nimport loadImg from '../imgs/load.png';\r\nimport capacitorImg from '../imgs/capacitor.jpg';\r\nimport inverterImg from '../imgs/inverter.png';\r\nimport meterImg from '../imgs/meter.jpg';\r\nimport substationImg from '../imgs/substation.jpg';\r\nimport generatorImg from '../imgs/generator.jpg';\r\nimport nodeImg from '../imgs/node.png'\r\n\r\nimport IEE_DF from '../data/IEEE-123_Dynamic_fixed.json';\r\nimport IEE_INVF from '../data/IEEE-123_Inverters_fixed.json';\r\nimport IEE_GENF from '../data/IEEE-123_Diesels_fixed.json';\r\n\r\n// import IEEE_NFH from '../data/9500/IEEE_9500.json';\r\n// import IEEE_INV from '../data/9500/Inverters.json'\r\n// import IEEE_GEN from '../data/9500/Rotating_Machines.json'\r\n\r\n// const dataFiles = [IEEE_NFH, IEEE_INV, IEEE_GEN];\r\nconst dataFiles = [IEE_DF,IEE_INVF,IEE_GENF];\r\n\r\nvar glmNetwork = null;\r\nvar counter = -1;\r\nconst options = {\r\n  edges: {\r\n    smooth: {\r\n      enabled: true,\r\n      type: \"dynamic\"\r\n    }\r\n  },\r\n  nodes: {\r\n    shapeProperties: {\r\n      interpolation: false\r\n    }\r\n  },\r\n  groups:{\r\n    load: {\"color\": \"#2a9d8f\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": loadImg},\r\n    triplex_load:{\"color\": \"#ffea00\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": loadImg},\r\n    capacitor:{\"color\": \"#283618\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": capacitorImg},\r\n    triplex_node:{\"color\": \"#003566\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": nodeImg},\r\n    substation:{\"color\": \"#fca311\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": substationImg},\r\n    triplex_meter:{\"color\": \"#072ac8\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": meterImg},\r\n    node:{\"color\": \"#4361ee\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": nodeImg},\r\n    meter:{\"color\": \"#d90429\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": meterImg},\r\n    inverter:{\"color\": \"#c8b6ff\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": inverterImg},\r\n    generator:{\"color\": \"#fee440\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": generatorImg},\r\n  },\r\n  interaction: {\r\n    hover:true,\r\n    hideEdgesOnDrag: true,\r\n    hideEdgesOnZoom: true,\r\n    navigationButtons: true\r\n  },\r\n  physics: {\r\n    barnesHut: {\r\n      gravitationalConstant: -80000,\r\n      springLength: 200,\r\n      springConstant: 0.50,\r\n    },\r\n    maxVelocity: 150,\r\n    minVelocity: 0.75,\r\n    solver: 'barnesHut',\r\n    stabilization: {\r\n      enabled: true,\r\n      iterations: 1000,\r\n      updateInterval: 1,\r\n      onlyDynamicEdges: false,\r\n      fit: true\r\n    },\r\n  },\r\n};\r\nconst edgeTypes = [\"overhead_line\", \"switch\", \"underground_line\", \"series_reactor\", \"triplex_line\", \"regulator\",\"transformer\"];\r\nconst nodeTypes = [\"load\", \"triplex_load\",\"capacitor\", \"node\", \"triplex_node\",\"substation\",\r\n                    \"meter\", \"triplex_meter\", \"inverter_dyn\", \"inverter\", \"diesel_dg\"];\r\nconst parent_child_edge_types = [\"capacitor\", \"triplex_meter\", \"triplex_load\", \"meter\"];\r\n\r\nconst nodeOptions = new Map([[\"load\", {\"group\": \"load\"}],\r\n                    [\"triplex_load\", {\"group\": \"triplex_load\"}],\r\n                    [\"capacitor\", {\"group\": \"capacitor\"}],\r\n                    [\"triplex_node\", {\"group\": \"triplex_node\"}],\r\n                    [\"substation\", {\"group\": \"substation\"}],\r\n                    [\"triplex_meter\", {\"group\": \"triplex_meter\"}],\r\n                    [\"node\", {\"group\": \"node\"}],\r\n                    [\"meter\", {\"group\": \"meter\"}],\r\n                    [\"inverter\", {\"group\": \"inverter\"}],\r\n                    [\"inverter_dyn\", {\"group\": \"inverter\"}],\r\n                    [\"diesel_dg\", {\"group\": \"generator\"}]]);\r\n\r\nconst edgeOptions = new Map([[\"overhead_line\", {\"width\": 4, \"color\": \"#000000\"}],\r\n                            [\"switch\", {\"width\": 4, \"color\": \"#3a0ca3\"}],\r\n                            [\"series_reactor\", {\"width\": 4, \"color\": \"#8c0000\"}],\r\n                            [\"triplex_line\", {\"width\": 4, \"color\": \"#c86bfa\"}],\r\n                            [\"underground_line\", {\"width\": 4, \"color\": \"#FFFF00\"}],\r\n                            [\"regulator\", {\"width\": 4, \"color\": \"#ff447d\"}],\r\n                            [\"transformer\", {\"width\": 4,\"color\": \"#00FF00\"}]]);\r\n\r\nvar nodes = [];\r\nfor (let file of dataFiles)\r\n{\r\n  var objs = file.objects;\r\n\r\n  for (let obj of objs)\r\n  {\r\n    var objectType = obj.name.includes(\":\") ? obj.name.split(\":\")[0] : obj.name;\r\n    var attributes = obj.attributes;\r\n    if (nodeTypes.includes(objectType))\r\n    {\r\n      var nodeID = attributes.name;\r\n      nodes.push({id: nodeID, label: nodeID,\r\n                  attributes: attributes,\r\n                  group: nodeOptions.get(objectType).group,\r\n                  title: \"Object Type: \" + objectType + \"\\n\" + getTitle(attributes)});\r\n    }\r\n  }\r\n}\r\nvar nodesDataSet = new DataSet(nodes);\r\n\r\nconst edges = [];\r\nfor (let file of dataFiles)\r\n{\r\n  objs = file.objects;\r\n\r\n  for (let obj of objs)\r\n  {\r\n    objectType = obj.name.includes(\":\") ? obj.name.split(\":\")[0] : obj.name;\r\n    attributes = obj.attributes;\r\n    if (edgeTypes.includes(objectType))\r\n    {\r\n      var edgeFrom = attributes.from.includes(\":\") ? attributes.from.split(\":\")[1] : attributes.from;\r\n      var edgeTo = attributes.to.includes(\":\") ? attributes.to.split(\":\")[1] : attributes.to;\r\n      var edgeID = obj.name.includes(\":\") ? obj.name : objectType + \":\" + attributes.name;\r\n\r\n      edges.push({from: edgeFrom, to: edgeTo,\r\n                id: edgeID,\r\n                color: edgeOptions.get(objectType).color,\r\n                width: edgeOptions.get(objectType).width,\r\n                title: \"Object Type: \" + objectType + \"\\n\" + getTitle(attributes)});\r\n    }\r\n    else if (parent_child_edge_types.includes(objectType))\r\n    {\r\n      nodeID = attributes.name;\r\n      var parent = attributes.parent;\r\n\r\n      if(parent !== undefined)\r\n      {\r\n        edges.push({from: parent, to: nodeID, color: {inherit: true}});\r\n      }\r\n    }\r\n    else if(nodeTypes.includes(objectType))\r\n    {\r\n      nodeID = attributes.name;\r\n      parent = attributes.parent;\r\n      \r\n      if(parent !== undefined)\r\n      {\r\n        edges.push({from: parent, to: nodeID, color: {inherit: true}});\r\n      }\r\n    }\r\n  }\r\n}\r\nvar edgesDataSet = new DataSet(edges);\r\n\r\nconst data = {\r\n  nodes: nodesDataSet,\r\n  edges: edgesDataSet\r\n}\r\n\r\nfunction TogglePhysics(toggle)\r\n{\r\n  if(toggle)\r\n  {\r\n    glmNetwork.setOptions({physics: {enabled: true}})\r\n  }\r\n  else\r\n  {\r\n    glmNetwork.setOptions({physics: {enabled: false}})\r\n  }\r\n}\r\n\r\nfunction Reset() {\r\n  let nodeItems = data.nodes.map((n) => {\r\n    if(n.color)\r\n    {\r\n      delete n.color;\r\n      return n;\r\n    }\r\n    else if(n.size)\r\n    {\r\n      delete n.size;\r\n      return n;\r\n    }\r\n  });\r\n  \r\n  let edgeItems = data.edges.map((e) => {\r\n    if(e.width === 20)\r\n    {\r\n      e.width = 4;\r\n      return e;\r\n    }\r\n    if(edgeTypes.includes(e.id.split(\":\")[0]))\r\n    {\r\n      e.color = edgeOptions.get(e.id.split(\":\")[0]).color;\r\n      e.width = edgeOptions.get(e.id.split(\":\")[0]).width;\r\n      return e;\r\n    }\r\n    else\r\n    {\r\n      e.color = {inherit: true};\r\n      return e;\r\n    }\r\n  });\r\n\r\n  data.nodes.update(nodeItems);\r\n  data.edges.update(edgeItems);\r\n  glmNetwork.fit();\r\n  counter = 0;\r\n}\r\n\r\nfunction Prev()\r\n{\r\n  var options = {\r\n    scale: 1,\r\n    animation: {\r\n      duration: 1000,\r\n      easing: \"easeInOutQuart\"\r\n    }\r\n  };\r\n\r\n  var prev = data.nodes.get({\r\n    filter: function (n) {\r\n      return (n.size === 50);\r\n    }\r\n  });\r\n\r\n  counter--;\r\n  if(counter < 0)\r\n  {\r\n    counter = prev.length - 1;\r\n  }\r\n  glmNetwork.focus(prev[counter].id, options)\r\n}\r\n\r\nfunction Next()\r\n{\r\n  var options = {\r\n    scale: 1,\r\n    animation: {\r\n      duration: 1000,\r\n      easing: \"easeInOutQuart\"\r\n    }\r\n  };\r\n\r\n  var nxt = data.nodes.get({\r\n    filter: function (n) {\r\n      return (n.size === 50);\r\n    }\r\n  });\r\n\r\n  counter++;\r\n  if(counter >= nxt.length)\r\n  {\r\n    counter = 0;\r\n    glmNetwork.focus(nxt[counter].id, options)\r\n  }\r\n  else\r\n  {\r\n    glmNetwork.focus(nxt[counter].id, options)\r\n  }\r\n}\r\n\r\nfunction NodeFocus(nodeID)\r\n{\r\n  var options = {\r\n    scale: 1,\r\n    animation: {\r\n      duration: 1000,\r\n      easing: \"easeInOutQuart\"\r\n    }\r\n  };\r\n\r\n  glmNetwork.focus(nodeID, options)\r\n}\r\n\r\nfunction HighlightGroup(group)\r\n{\r\n  var nodesMap = data.nodes.map((n) => {\r\n    if(n.group === group)\r\n    {\r\n      delete n.color;\r\n      n.size = 50;\r\n      return n;\r\n    }\r\n    else\r\n    {\r\n      delete n.size;\r\n      n.color = \"lightgrey\";\r\n      return n;\r\n    }\r\n  });\r\n\r\n  var edgesMap = data.edges.map((e) => {\r\n    if(!(e.width === 20))\r\n      e.color = 'lightgrey';\r\n\r\n      return e;\r\n  });\r\n\r\n  data.nodes.update(nodesMap);\r\n  data.edges.update(edgesMap);\r\n}\r\n\r\nfunction HighlightEdges(edgeID)\r\n{\r\n  let nodeItems = data.nodes.map((n) => {\r\n    if (!(n.size === 50))\r\n    {\r\n      n.color = \"lightgrey\";\r\n    }\r\n    return n;\r\n  });\r\n  \r\n  let edgeItems = data.edges.map((e) => {\r\n    if(e.id.split(\":\")[0] === edgeID)\r\n    {\r\n      e.color = edgeOptions.get(edgeID).color;\r\n      e.width = 20;\r\n      return e;\r\n    }\r\n    else\r\n    {\r\n      e.color = \"lightgrey\";\r\n      e.width = 4;\r\n      return e;\r\n    }\r\n  });\r\n  \r\n  data.nodes.update(nodeItems);\r\n  data.edges.update(edgeItems);\r\n}\r\n\r\nfunction getTitle(attributes)\r\n{\r\n  let str = \"\";\r\n  for (let [k, v] of Object.entries(attributes))\r\n  {\r\n    str = str + k +\": \" + v +\"\\n\";\r\n  }\r\n  return str;\r\n}\r\n\r\nconst Graph = (props) => {\r\n  const container = useRef(null);\r\n  const [nodeToEdit, setNodeToEdit] = useState({})\r\n  \r\n  function setNodeEdit(node_id)\r\n  {\r\n    var node = data.nodes.get(node_id);\r\n    setNodeToEdit(node);\r\n  }\r\n\r\n  function closePopUp() \r\n  {\r\n    document.getElementById(\"node-saveButton\").onclick = null;\r\n    document.getElementById(\"node-closeButton\").onclick = null;\r\n    document.getElementById(\"node-popUp\").style.display = \"none\";\r\n  }\r\n\r\n  function saveEdits() {\r\n    var node = data.nodes.get(nodeToEdit.id);\r\n    node.attributes = nodeToEdit.attributes;\r\n    node.title = getTitle(node.attributes);\r\n    data.nodes.update(node);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.display === \"block\")\r\n    {\r\n      document.getElementById(\"networks-wrapper\").style.display = props.display;\r\n      glmNetwork = new Network(container.current, data, options);\r\n      \r\n      glmNetwork.on(\"stabilizationProgress\", function (params) {\r\n\r\n        var maxWidth = 360;\r\n        var minWidth = 1;\r\n        var widthFactor = params.iterations / params.total;\r\n        var width = Math.max(minWidth, maxWidth * widthFactor);\r\n        document.getElementById(\"circularProgress\").style.background = \"conic-gradient(#b25a00 \"+ width +\"deg, #333 0deg)\";\r\n        document.getElementById(\"progressValue\").innerText = Math.round(widthFactor * 100) + \"%\";\r\n      \r\n      });\r\n      \r\n      glmNetwork.once(\"stabilizationIterationsDone\", function () {\r\n\r\n        document.getElementById(\"circularProgress\").style.background = \"conic-gradient(#b25a00 360deg, #333 0deg)\";\r\n        document.getElementById(\"progressValue\").innerText = \"100%\";\r\n        document.getElementById(\"circularProgress\").style.opacity = 0.7;\r\n\r\n        setTimeout(function () {\r\n          document.getElementById(\"circularProgress\").style.display = \"none\";\r\n        }, 500);\r\n\r\n        glmNetwork.setOptions({physics: {enabled: false}})\r\n      });\r\n      \r\n      glmNetwork.on(\"doubleClick\", function (params) {\r\n        if (params.nodes[0] === undefined)\r\n        {\r\n          alert(\"Double Click on a Node to edit\")\r\n        }\r\n        else\r\n        {\r\n          setNodeEdit(params.nodes[0]);\r\n          document.getElementById(\"node-popUp\").style.display = \"block\";\r\n        }\r\n        \r\n      });\r\n    }\r\n  }, [container, props]); \r\n\r\n  return (\r\n    <>\r\n      <SearchBar \r\n        data = {data.nodes}\r\n        togglePhy = {TogglePhysics}\r\n        reset = {Reset} \r\n        onFind = {NodeFocus}\r\n        prev = {Prev}\r\n        next = {Next}\r\n      />\r\n\r\n      <div id=\"node-popUp\">\r\n        <span id=\"node-operation\">Edit Node</span> <br />\r\n        <table style={{\"margin\": \"auto\"}}>\r\n          <tbody>\r\n            {\r\n              Object.entries(nodeToEdit.attributes === undefined ? {} : nodeToEdit.attributes).map(([key, val], index) => {\r\n                return(\r\n                  <tr key={index} >\r\n                    <td>{key}</td>\r\n                    <td><input value={val} onChange = {(e) => {setNodeToEdit({...nodeToEdit, attributes: {...nodeToEdit.attributes, [key]: e.target.value}});}}></input></td>\r\n                  </tr>\r\n                );\r\n              }) \r\n            }\r\n          </tbody>\r\n        </table>\r\n        <input type=\"button\" value=\"save\" id=\"node-saveButton\" onClick={saveEdits}/>\r\n        <input type=\"button\" value=\"Close\" id=\"node-closeButton\" onClick={closePopUp}/>\r\n      </div>\r\n\r\n      <div id = \"networks-wrapper\">\r\n        <div className='main-network' ref={container}/>\r\n        <div id='circularProgress'>\r\n          <span id='progressValue'>0%</span>\r\n        </div>\r\n        <Legend findGroup = {HighlightGroup} findEdges = {HighlightEdges}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Graph;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}