{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mend166\\\\Documents\\\\GitHub\\\\glm_viz\\\\vis_n_react\\\\client\\\\src\\\\App\\\\Legend.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Network } from 'vis-network';\nimport { DataSet } from 'vis-data';\nimport '../styles/vis-network.css';\nimport \"../styles/Legend.css\";\nimport loadImg from '../imgs/load.png';\nimport capacitorImg from '../imgs/capacitor.jpg';\nimport inverterImg from '../imgs/inverter.png';\nimport meterImg from '../imgs/meter.jpg';\nimport substationImg from '../imgs/substation.jpg';\nimport generatorImg from '../imgs/generator.jpg';\nimport nodeImg from '../imgs/node.png';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeOptions = new Map([[\"load\", {\n  \"group\": \"load\"\n}], [\"triplex_load\", {\n  \"group\": \"triplex_load\"\n}], [\"capacitor\", {\n  \"group\": \"capacitor\"\n}], [\"triplex_node\", {\n  \"group\": \"triplex_node\"\n}], [\"substation\", {\n  \"group\": \"substation\"\n}], [\"triplex_meter\", {\n  \"group\": \"triplex_meter\"\n}], [\"node\", {\n  \"group\": \"node\"\n}], [\"meter\", {\n  \"group\": \"meter\"\n}], [\"inverter\", {\n  \"group\": \"inverter\"\n}], [\"inverter_dyn\", {\n  \"group\": \"inverter\"\n}], [\"diesel_dg\", {\n  \"group\": \"generator\"\n}]]);\nconst edgeOptions = new Map([[\"overhead_line\", {\n  \"width\": 4,\n  \"color\": \"#000000\"\n}], [\"switch\", {\n  \"width\": 4,\n  \"color\": \"#3a0ca3\"\n}], [\"series_reactor\", {\n  \"width\": 4,\n  \"color\": \"#8c0000\"\n}], [\"triplex_line\", {\n  \"width\": 4,\n  \"color\": \"#c86bfa\"\n}], [\"underground_line\", {\n  \"width\": 4,\n  \"color\": \"#FFFF00\"\n}], [\"regulator\", {\n  \"width\": 4,\n  \"color\": \"#ff447d\"\n}], [\"transformer\", {\n  \"width\": 4,\n  \"color\": \"#00FF00\"\n}]]);\nvar network = null;\nconst nodes = [];\nconst edges = [];\nnodes.push({\n  id: 1,\n  x: -200,\n  y: 0,\n  fixed: true,\n  physics: false,\n  label: \"load\",\n  group: nodeOptions.get(\"load\").group\n});\nnodes.push({\n  id: 2,\n  x: -100,\n  y: 0,\n  fixed: true,\n  physics: false,\n  label: \"node\",\n  group: nodeOptions.get(\"node\").group\n});\nnodes.push({\n  id: 3,\n  x: 0,\n  y: 0,\n  fixed: true,\n  physics: false,\n  label: \"meter\",\n  group: nodeOptions.get(\"meter\").group\n});\nnodes.push({\n  id: 4,\n  x: 100,\n  y: 0,\n  fixed: true,\n  physics: false,\n  label: \"inverter\",\n  group: nodeOptions.get(\"inverter\").group\n});\nnodes.push({\n  id: 5,\n  x: 200,\n  y: 0,\n  fixed: true,\n  physics: false,\n  label: \"diesel_dg\",\n  group: nodeOptions.get(\"diesel_dg\").group\n});\nnodes.push({\n  id: 6,\n  x: 300,\n  y: 0,\n  fixed: true,\n  physics: false,\n  label: \"capacitor\",\n  group: nodeOptions.get(\"capacitor\").group\n});\nnodes.push({\n  id: 7,\n  x: -125,\n  y: 100,\n  fixed: true,\n  physics: false,\n  label: \"triplex_load\",\n  group: nodeOptions.get(\"triplex_load\").group\n});\nnodes.push({\n  id: 8,\n  x: 0,\n  y: 100,\n  fixed: true,\n  physics: false,\n  label: \"triplex_node\",\n  group: nodeOptions.get(\"triplex_node\").group\n});\nnodes.push({\n  id: 9,\n  x: 125,\n  y: 100,\n  fixed: true,\n  physics: false,\n  label: \"triplex_meter\",\n  group: nodeOptions.get(\"triplex_meter\").group\n});\nnodes.push({\n  id: 10,\n  x: 250,\n  y: 100,\n  fixed: true,\n  physics: false,\n  label: \"substation\",\n  group: nodeOptions.get(\"substation\").group\n});\n\n//Edge nodes\nnodes.push({\n  id: 100,\n  x: -150,\n  y: 250,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 101,\n  x: 250,\n  y: 250,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 102,\n  x: -150,\n  y: 325,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 103,\n  x: 250,\n  y: 325,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 104,\n  x: -150,\n  y: 400,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 105,\n  x: 250,\n  y: 400,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 106,\n  x: -150,\n  y: 475,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 107,\n  x: 250,\n  y: 475,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 108,\n  x: -150,\n  y: 550,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 109,\n  x: 250,\n  y: 550,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 110,\n  x: -150,\n  y: 625,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 111,\n  x: 250,\n  y: 625,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 112,\n  x: -150,\n  y: 700,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nnodes.push({\n  id: 113,\n  x: 250,\n  y: 700,\n  fixed: true,\n  physics: false,\n  color: \"black\"\n});\nedges.push({\n  from: 100,\n  to: 101,\n  id: \"overhead_line\",\n  label: \"overhead_line\",\n  width: edgeOptions.get(\"overhead_line\").width,\n  color: edgeOptions.get(\"overhead_line\").color\n});\nedges.push({\n  from: 102,\n  to: 103,\n  id: \"switch\",\n  label: \"switch\",\n  width: edgeOptions.get(\"switch\").width,\n  color: edgeOptions.get(\"switch\").color\n});\nedges.push({\n  from: 104,\n  to: 105,\n  id: \"underground_line\",\n  label: \"underground_line\",\n  width: edgeOptions.get(\"underground_line\").width,\n  color: edgeOptions.get(\"underground_line\").color\n});\nedges.push({\n  from: 106,\n  to: 107,\n  id: \"regulator\",\n  label: \"regulator\",\n  width: edgeOptions.get(\"regulator\").width,\n  color: edgeOptions.get(\"regulator\").color\n});\nedges.push({\n  from: 108,\n  to: 109,\n  id: \"transformer\",\n  label: \"transformer\",\n  width: edgeOptions.get(\"transformer\").width,\n  color: edgeOptions.get(\"transformer\").color\n});\nedges.push({\n  from: 110,\n  to: 111,\n  id: \"triplex_line\",\n  label: \"triplex_line\",\n  width: edgeOptions.get(\"triplex_line\").width,\n  color: edgeOptions.get(\"triplex_line\").color\n});\nedges.push({\n  from: 112,\n  to: 113,\n  id: \"series_reactor\",\n  label: \"series_reactor\",\n  width: edgeOptions.get(\"series_reactor\").width,\n  color: edgeOptions.get(\"series_reactor\").color\n});\nconst nodesDataSet = new DataSet(nodes);\nconst edgesDataSet = new DataSet(edges);\nconst data = {\n  nodes: nodesDataSet,\n  edges: edgesDataSet\n};\nconst options = {\n  \"nodes\": {\n    \"font\": {\n      \"size\": 20\n    }\n  },\n  \"edges\": {\n    \"font\": {\n      \"size\": 30\n    }\n  },\n  \"groups\": {\n    \"load\": {\n      \"color\": \"#2a9d8f\",\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": loadImg\n    },\n    \"triplex_load\": {\n      \"color\": \"#ffea00\",\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": loadImg\n    },\n    \"capacitor\": {\n      \"color\": \"#283618\",\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": capacitorImg\n    },\n    \"triplex_node\": {\n      \"color\": \"#003566\",\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": nodeImg\n    },\n    \"substation\": {\n      \"color\": \"#fca311\",\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": substationImg\n    },\n    \"triplex_meter\": {\n      \"color\": \"#072ac8\",\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": meterImg\n    },\n    \"node\": {\n      \"color\": \"#4361ee\",\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": nodeImg\n    },\n    \"meter\": {\n      \"color\": \"#d90429\",\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": meterImg\n    },\n    \"inverter\": {\n      \"color\": \"#c8b6ff\",\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": inverterImg\n    },\n    \"generator\": {\n      \"color\": \"#fee440\",\n      \"borderWidth\": 4,\n      \"shape\": \"circularImage\",\n      \"image\": generatorImg\n    }\n  }\n};\nconst Legend = props => {\n  _s();\n  const container = useRef(null);\n  useEffect(() => {\n    network = new Network(container.current, data, options);\n    network.on('doubleClick', function (params) {\n      if (params.nodes[0]) {\n        let g = data.nodes.get(params.nodes[0]);\n        props.findGroup(g.group);\n      }\n      if (params.edges[0]) {\n        let e = data.edges.get(params.edges[0]);\n        props.findEdges(e.id);\n      }\n    });\n  }, [container, props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visLegend\",\n      ref: container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Legend, \"gP936EAkbq44zYYGRnj90r2fLhg=\");\n_c = Legend;\nexport default Legend;\nvar _c;\n$RefreshReg$(_c, \"Legend\");","map":{"version":3,"names":["React","useEffect","useRef","Network","DataSet","loadImg","capacitorImg","inverterImg","meterImg","substationImg","generatorImg","nodeImg","nodeOptions","Map","edgeOptions","network","nodes","edges","push","id","x","y","fixed","physics","label","group","get","color","from","to","width","nodesDataSet","edgesDataSet","data","options","Legend","props","container","current","on","params","g","findGroup","e","findEdges"],"sources":["C:/Users/mend166/Documents/GitHub/glm_viz/vis_n_react/client/src/App/Legend.js"],"sourcesContent":["import React, {useEffect, useRef } from 'react';\r\nimport { Network } from 'vis-network';\r\nimport { DataSet} from 'vis-data';\r\nimport '../styles/vis-network.css';\r\nimport \"../styles/Legend.css\";\r\nimport loadImg from '../imgs/load.png';\r\nimport capacitorImg from '../imgs/capacitor.jpg';\r\nimport inverterImg from '../imgs/inverter.png';\r\nimport meterImg from '../imgs/meter.jpg';\r\nimport substationImg from '../imgs/substation.jpg';\r\nimport generatorImg from '../imgs/generator.jpg';\r\nimport nodeImg from '../imgs/node.png';\r\n\r\nconst nodeOptions = new Map([[\"load\", {\"group\": \"load\"}],\r\n                    [\"triplex_load\", {\"group\": \"triplex_load\"}],\r\n                    [\"capacitor\", {\"group\": \"capacitor\"}],\r\n                    [\"triplex_node\", {\"group\": \"triplex_node\"}],\r\n                    [\"substation\", {\"group\": \"substation\"}],\r\n                    [\"triplex_meter\", {\"group\": \"triplex_meter\"}],\r\n                    [\"node\", {\"group\": \"node\"}],\r\n                    [\"meter\", {\"group\": \"meter\"}],\r\n                    [\"inverter\", {\"group\": \"inverter\"}],\r\n                    [\"inverter_dyn\", {\"group\": \"inverter\"}],\r\n                    [\"diesel_dg\", {\"group\": \"generator\"}]]);\r\n\r\nconst edgeOptions = new Map([[\"overhead_line\", {\"width\": 4, \"color\": \"#000000\"}],\r\n                            [\"switch\", {\"width\": 4, \"color\": \"#3a0ca3\"}],\r\n                            [\"series_reactor\", {\"width\": 4, \"color\": \"#8c0000\"}],\r\n                            [\"triplex_line\", {\"width\": 4, \"color\": \"#c86bfa\"}],\r\n                            [\"underground_line\", {\"width\": 4, \"color\": \"#FFFF00\"}],\r\n                            [\"regulator\", {\"width\": 4, \"color\": \"#ff447d\"}],\r\n                            [\"transformer\", {\"width\": 4, \"color\": \"#00FF00\"}]]);\r\n\r\nvar network = null;\r\nconst nodes = [];\r\nconst edges = [];\r\n\r\nnodes.push({\r\n    id: 1,\r\n    x: -200, \r\n    y: 0,\r\n    fixed: true,\r\n    physics: false,\r\n    label: \"load\",\r\n    group: nodeOptions.get(\"load\").group\r\n});\r\n\r\nnodes.push({\r\n    id: 2,\r\n    x: -100, \r\n    y: 0,\r\n    fixed: true,\r\n    physics: false,\r\n    label: \"node\",\r\n    group: nodeOptions.get(\"node\").group\r\n});\r\n\r\nnodes.push({\r\n    id: 3,\r\n    x: 0, \r\n    y: 0,\r\n    fixed: true,\r\n    physics: false,\r\n    label: \"meter\",\r\n    group: nodeOptions.get(\"meter\").group\r\n});\r\n\r\nnodes.push({\r\n    id: 4,\r\n    x: 100, \r\n    y: 0,\r\n    fixed: true,\r\n    physics: false,\r\n    label: \"inverter\",\r\n    group: nodeOptions.get(\"inverter\").group\r\n});\r\n\r\nnodes.push({\r\n    id: 5,\r\n    x: 200, \r\n    y: 0,\r\n    fixed: true,\r\n    physics: false,\r\n    label: \"diesel_dg\",\r\n    group: nodeOptions.get(\"diesel_dg\").group\r\n});\r\n\r\nnodes.push({\r\n    id: 6,\r\n    x: 300, \r\n    y: 0,\r\n    fixed: true,\r\n    physics: false,\r\n    label: \"capacitor\",\r\n    group: nodeOptions.get(\"capacitor\").group\r\n});\r\n\r\nnodes.push({\r\n    id: 7,\r\n    x: -125, \r\n    y: 100,\r\n    fixed: true,\r\n    physics: false,\r\n    label: \"triplex_load\",\r\n    group: nodeOptions.get(\"triplex_load\").group\r\n});\r\n\r\nnodes.push({\r\n    id: 8,\r\n    x: 0, \r\n    y: 100,\r\n    fixed: true,\r\n    physics: false,\r\n    label: \"triplex_node\",\r\n    group: nodeOptions.get(\"triplex_node\").group\r\n});\r\n\r\nnodes.push({\r\n    id: 9,\r\n    x: 125, \r\n    y: 100,\r\n    fixed: true,\r\n    physics: false,\r\n    label: \"triplex_meter\",\r\n    group: nodeOptions.get(\"triplex_meter\").group\r\n});\r\n\r\nnodes.push({\r\n    id: 10,\r\n    x: 250, \r\n    y: 100,\r\n    fixed: true,\r\n    physics: false,\r\n    label: \"substation\",\r\n    group: nodeOptions.get(\"substation\").group\r\n});\r\n\r\n\r\n//Edge nodes\r\nnodes.push({\r\n    id:100,\r\n    x: -150,\r\n    y: 250,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:101,\r\n    x: 250,\r\n    y: 250,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:102,\r\n    x: -150,\r\n    y: 325,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:103,\r\n    x: 250,\r\n    y: 325,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:104,\r\n    x: -150,\r\n    y: 400,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:105,\r\n    x: 250,\r\n    y: 400,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:106,\r\n    x: -150,\r\n    y: 475,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:107,\r\n    x: 250,\r\n    y: 475,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:108,\r\n    x: -150,\r\n    y: 550,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:109,\r\n    x: 250,\r\n    y: 550,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:110,\r\n    x: -150,\r\n    y: 625,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:111,\r\n    x: 250,\r\n    y: 625,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:112,\r\n    x: -150,\r\n    y: 700,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nnodes.push({\r\n    id:113,\r\n    x: 250,\r\n    y: 700,\r\n    fixed: true,\r\n    physics: false,\r\n    color: \"black\"\r\n});\r\n\r\nedges.push({\r\n    from: 100,\r\n    to: 101,\r\n    id: \"overhead_line\",\r\n    label: \"overhead_line\",\r\n    width: edgeOptions.get(\"overhead_line\").width,\r\n    color: edgeOptions.get(\"overhead_line\").color\r\n});\r\n\r\nedges.push({\r\n    from: 102,\r\n    to: 103,\r\n    id: \"switch\",\r\n    label: \"switch\",\r\n    width: edgeOptions.get(\"switch\").width,\r\n    color: edgeOptions.get(\"switch\").color\r\n});\r\n\r\nedges.push({\r\n    from: 104,\r\n    to: 105,\r\n    id: \"underground_line\",\r\n    label: \"underground_line\",\r\n    width: edgeOptions.get(\"underground_line\").width,\r\n    color: edgeOptions.get(\"underground_line\").color\r\n});\r\n\r\nedges.push({\r\n    from: 106,\r\n    to: 107,\r\n    id: \"regulator\",\r\n    label: \"regulator\",\r\n    width: edgeOptions.get(\"regulator\").width,\r\n    color: edgeOptions.get(\"regulator\").color\r\n});\r\n\r\nedges.push({\r\n    from: 108,\r\n    to: 109,\r\n    id: \"transformer\",\r\n    label: \"transformer\",\r\n    width: edgeOptions.get(\"transformer\").width,\r\n    color: edgeOptions.get(\"transformer\").color\r\n});\r\n\r\nedges.push({\r\n    from: 110,\r\n    to: 111,\r\n    id: \"triplex_line\",\r\n    label: \"triplex_line\",\r\n    width: edgeOptions.get(\"triplex_line\").width,\r\n    color: edgeOptions.get(\"triplex_line\").color\r\n});\r\n\r\nedges.push({\r\n    from: 112,\r\n    to: 113,\r\n    id: \"series_reactor\",\r\n    label: \"series_reactor\",\r\n    width: edgeOptions.get(\"series_reactor\").width,\r\n    color: edgeOptions.get(\"series_reactor\").color\r\n});\r\n\r\nconst nodesDataSet = new DataSet(nodes);\r\nconst edgesDataSet = new DataSet(edges);\r\n\r\nconst data = {\r\n    nodes: nodesDataSet,\r\n    edges: edgesDataSet\r\n}\r\n\r\nconst options = {\r\n    \"nodes\":{\r\n        \"font\":{\r\n            \"size\": 20\r\n        }\r\n    },\r\n    \"edges\":{\r\n        \"font\":{\r\n            \"size\": 30,\r\n        }\r\n    },\r\n    \"groups\":{\r\n        \"load\": {\"color\": \"#2a9d8f\", \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": loadImg},\r\n        \"triplex_load\":{\"color\": \"#ffea00\", \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": loadImg},\r\n        \"capacitor\":{\"color\": \"#283618\", \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": capacitorImg},\r\n        \"triplex_node\":{\"color\": \"#003566\", \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": nodeImg},\r\n        \"substation\":{\"color\": \"#fca311\", \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": substationImg},\r\n        \"triplex_meter\":{\"color\": \"#072ac8\", \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": meterImg},\r\n        \"node\":{\"color\": \"#4361ee\", \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": nodeImg},\r\n        \"meter\":{\"color\": \"#d90429\", \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": meterImg},\r\n        \"inverter\":{\"color\": \"#c8b6ff\", \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": inverterImg},\r\n        \"generator\":{\"color\": \"#fee440\", \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": generatorImg},\r\n    },\r\n};\r\n\r\nconst Legend = (props) => {\r\n    const container = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        network = new Network(container.current, data, options);\r\n\r\n        network.on('doubleClick', function(params) {\r\n            if(params.nodes[0])\r\n            {\r\n                let g = data.nodes.get(params.nodes[0]);\r\n                props.findGroup(g.group);\r\n            }\r\n            if(params.edges[0])\r\n            {\r\n                let e = data.edges.get(params.edges[0]);\r\n                props.findEdges(e.id);\r\n            }\r\n            \r\n        });\r\n    }, [container, props]);\r\n\r\n    return (\r\n    <>\r\n        <div className='visLegend' ref={container} />\r\n    </>);\r\n};\r\n\r\nexport default Legend;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}