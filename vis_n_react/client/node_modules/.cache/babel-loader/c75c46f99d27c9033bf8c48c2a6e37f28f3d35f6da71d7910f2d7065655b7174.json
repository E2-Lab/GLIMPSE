{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mend166\\\\Documents\\\\GitHub\\\\glm_viz\\\\vis_n_react\\\\client\\\\src\\\\App\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"../styles/Graph.css\";\nimport { Network } from 'vis-network';\nimport { DataSet } from 'vis-data';\nimport SearchBar from './SearchBar';\nimport '../styles/vis-network.css';\nimport Legend from './Legend';\nimport loadImg from '../imgs/load.png';\nimport capacitorImg from '../imgs/capacitor.jpg';\nimport inverterImg from '../imgs/inverter.png';\nimport meterImg from '../imgs/meter.jpg';\nimport substationImg from '../imgs/substation.jpg';\nimport generatorImg from '../imgs/generator.jpg';\nimport nodeImg from '../imgs/node.png';\n\n// import IEE_DF from '../data/IEEE-123_Dynamic_fixed.json';\n// import IEE_INVF from '../data/IEEE-123_Inverters_fixed.json';\n// import IEE_GENF from '../data/IEEE-123_Diesels_fixed.json';\n\n// import IEEE_NFH from '../data/9500/IEEE_9500.json';\n// import IEEE_INV from '../data/9500/Inverters.json'\n// import IEEE_GEN from '../data/9500/Rotating_Machines.json'\n\n// const dataFiles = [IEEE_NFH, IEEE_INV, IEEE_GEN];\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = props => {\n  _s();\n  const dataFiles = props.visFiles;\n  var data;\n  var glmNetwork = null;\n  var counter = -1;\n  const options = {\n    edges: {\n      smooth: {\n        enabled: true,\n        type: \"dynamic\"\n      }\n    },\n    nodes: {\n      shapeProperties: {\n        interpolation: false\n      }\n    },\n    groups: {\n      load: {\n        \"color\": \"#2a9d8f\",\n        \"size\": 25,\n        \"borderWidth\": 4,\n        \"shape\": \"circularImage\",\n        \"image\": loadImg\n      },\n      triplex_load: {\n        \"color\": \"#ffea00\",\n        \"size\": 25,\n        \"borderWidth\": 4,\n        \"shape\": \"circularImage\",\n        \"image\": loadImg\n      },\n      capacitor: {\n        \"color\": \"#283618\",\n        \"size\": 25,\n        \"borderWidth\": 4,\n        \"shape\": \"circularImage\",\n        \"image\": capacitorImg\n      },\n      triplex_node: {\n        \"color\": \"#003566\",\n        \"size\": 25,\n        \"borderWidth\": 4,\n        \"shape\": \"circularImage\",\n        \"image\": nodeImg\n      },\n      substation: {\n        \"color\": \"#fca311\",\n        \"size\": 25,\n        \"borderWidth\": 4,\n        \"shape\": \"circularImage\",\n        \"image\": substationImg\n      },\n      triplex_meter: {\n        \"color\": \"#072ac8\",\n        \"size\": 25,\n        \"borderWidth\": 4,\n        \"shape\": \"circularImage\",\n        \"image\": meterImg\n      },\n      node: {\n        \"color\": \"#4361ee\",\n        \"size\": 25,\n        \"borderWidth\": 4,\n        \"shape\": \"circularImage\",\n        \"image\": nodeImg\n      },\n      meter: {\n        \"color\": \"#d90429\",\n        \"size\": 25,\n        \"borderWidth\": 4,\n        \"shape\": \"circularImage\",\n        \"image\": meterImg\n      },\n      inverter: {\n        \"color\": \"#c8b6ff\",\n        \"size\": 25,\n        \"borderWidth\": 4,\n        \"shape\": \"circularImage\",\n        \"image\": inverterImg\n      },\n      generator: {\n        \"color\": \"#fee440\",\n        \"size\": 25,\n        \"borderWidth\": 4,\n        \"shape\": \"circularImage\",\n        \"image\": generatorImg\n      }\n    },\n    interaction: {\n      hover: true,\n      hideEdgesOnDrag: true,\n      hideEdgesOnZoom: true,\n      navigationButtons: true\n    },\n    physics: {\n      barnesHut: {\n        gravitationalConstant: -80000,\n        springLength: 200,\n        springConstant: 0.50\n      },\n      maxVelocity: 150,\n      minVelocity: 0.75,\n      solver: 'barnesHut',\n      stabilization: {\n        enabled: true,\n        iterations: 1000,\n        updateInterval: 1,\n        onlyDynamicEdges: false,\n        fit: true\n      }\n    }\n  };\n  const edgeTypes = [\"overhead_line\", \"switch\", \"underground_line\", \"series_reactor\", \"triplex_line\", \"regulator\", \"transformer\"];\n  const nodeTypes = [\"load\", \"triplex_load\", \"capacitor\", \"node\", \"triplex_node\", \"substation\", \"meter\", \"triplex_meter\", \"inverter_dyn\", \"inverter\", \"diesel_dg\"];\n  const parent_child_edge_types = [\"capacitor\", \"triplex_meter\", \"triplex_load\", \"meter\"];\n  const nodeOptions = new Map([[\"load\", {\n    \"group\": \"load\"\n  }], [\"triplex_load\", {\n    \"group\": \"triplex_load\"\n  }], [\"capacitor\", {\n    \"group\": \"capacitor\"\n  }], [\"triplex_node\", {\n    \"group\": \"triplex_node\"\n  }], [\"substation\", {\n    \"group\": \"substation\"\n  }], [\"triplex_meter\", {\n    \"group\": \"triplex_meter\"\n  }], [\"node\", {\n    \"group\": \"node\"\n  }], [\"meter\", {\n    \"group\": \"meter\"\n  }], [\"inverter\", {\n    \"group\": \"inverter\"\n  }], [\"inverter_dyn\", {\n    \"group\": \"inverter\"\n  }], [\"diesel_dg\", {\n    \"group\": \"generator\"\n  }]]);\n  const edgeOptions = new Map([[\"overhead_line\", {\n    \"width\": 4,\n    \"color\": \"#000000\"\n  }], [\"switch\", {\n    \"width\": 4,\n    \"color\": \"#3a0ca3\"\n  }], [\"series_reactor\", {\n    \"width\": 4,\n    \"color\": \"#8c0000\"\n  }], [\"triplex_line\", {\n    \"width\": 4,\n    \"color\": \"#c86bfa\"\n  }], [\"underground_line\", {\n    \"width\": 4,\n    \"color\": \"#FFFF00\"\n  }], [\"regulator\", {\n    \"width\": 4,\n    \"color\": \"#ff447d\"\n  }], [\"transformer\", {\n    \"width\": 4,\n    \"color\": \"#00FF00\"\n  }]]);\n  var nodes = [];\n  if (dataFiles.length > 0) {\n    for (let file of dataFiles) {\n      var objs = file.objects;\n      for (let obj of objs) {\n        var objectType = obj.name.includes(\":\") ? obj.name.split(\":\")[0] : obj.name;\n        var attributes = obj.attributes;\n        if (nodeTypes.includes(objectType)) {\n          var nodeID = attributes.name;\n          nodes.push({\n            id: nodeID,\n            label: nodeID,\n            attributes: attributes,\n            group: nodeOptions.get(objectType).group,\n            title: \"Object Type: \" + objectType + \"\\n\" + getTitle(attributes)\n          });\n        }\n      }\n    }\n    var nodesDataSet = new DataSet(nodes);\n    const edges = [];\n    for (let file of dataFiles) {\n      objs = file.objects;\n      for (let obj of objs) {\n        objectType = obj.name.includes(\":\") ? obj.name.split(\":\")[0] : obj.name;\n        attributes = obj.attributes;\n        if (edgeTypes.includes(objectType)) {\n          var edgeFrom = attributes.from.includes(\":\") ? attributes.from.split(\":\")[1] : attributes.from;\n          var edgeTo = attributes.to.includes(\":\") ? attributes.to.split(\":\")[1] : attributes.to;\n          var edgeID = obj.name.includes(\":\") ? obj.name : objectType + \":\" + attributes.name;\n          edges.push({\n            from: edgeFrom,\n            to: edgeTo,\n            id: edgeID,\n            color: edgeOptions.get(objectType).color,\n            width: edgeOptions.get(objectType).width,\n            title: \"Object Type: \" + objectType + \"\\n\" + getTitle(attributes)\n          });\n        } else if (parent_child_edge_types.includes(objectType)) {\n          nodeID = attributes.name;\n          var parent = attributes.parent;\n          if (parent !== undefined) {\n            edges.push({\n              from: parent,\n              to: nodeID,\n              color: {\n                inherit: true\n              }\n            });\n          }\n        } else if (nodeTypes.includes(objectType)) {\n          nodeID = attributes.name;\n          parent = attributes.parent;\n          if (parent !== undefined) {\n            edges.push({\n              from: parent,\n              to: nodeID,\n              color: {\n                inherit: true\n              }\n            });\n          }\n        }\n      }\n    }\n    var edgesDataSet = new DataSet(edges);\n    data = {\n      nodes: nodesDataSet,\n      edges: edgesDataSet\n    };\n  }\n  function TogglePhysics(toggle) {\n    if (toggle) {\n      glmNetwork.setOptions({\n        physics: {\n          enabled: true\n        }\n      });\n    } else {\n      glmNetwork.setOptions({\n        physics: {\n          enabled: false\n        }\n      });\n    }\n  }\n  function Reset() {\n    let nodeItems = data.nodes.map(n => {\n      if (n.color) {\n        delete n.color;\n        return n;\n      } else if (n.size) {\n        delete n.size;\n        return n;\n      }\n    });\n    let edgeItems = data.edges.map(e => {\n      if (e.width === 20) {\n        e.width = 4;\n        return e;\n      } else if (edgeTypes.includes(e.id.split(\":\")[0])) {\n        e.color = edgeOptions.get(e.id.split(\":\")[0]).color;\n        e.width = edgeOptions.get(e.id.split(\":\")[0]).width;\n        return e;\n      } else {\n        e.color = {\n          inherit: true\n        };\n        return e;\n      }\n    });\n    data.nodes.update(nodeItems);\n    data.edges.update(edgeItems);\n    glmNetwork.fit();\n    counter = 0;\n  }\n  function Prev() {\n    var options = {\n      scale: 1,\n      animation: {\n        duration: 1000,\n        easing: \"easeInOutQuart\"\n      }\n    };\n    var prev = data.nodes.get({\n      filter: function (n) {\n        return n.size === 50;\n      }\n    });\n    counter--;\n    if (counter < 0) {\n      counter = prev.length - 1;\n    }\n    glmNetwork.focus(prev[counter].id, options);\n  }\n  function Next() {\n    var options = {\n      scale: 1,\n      animation: {\n        duration: 1000,\n        easing: \"easeInOutQuart\"\n      }\n    };\n    var nxt = data.nodes.get({\n      filter: function (n) {\n        return n.size === 50;\n      }\n    });\n    counter++;\n    if (counter >= nxt.length) {\n      counter = 0;\n      glmNetwork.focus(nxt[counter].id, options);\n    } else {\n      glmNetwork.focus(nxt[counter].id, options);\n    }\n  }\n  function NodeFocus(nodeID) {\n    var options = {\n      scale: 1,\n      animation: {\n        duration: 1000,\n        easing: \"easeInOutQuart\"\n      }\n    };\n    glmNetwork.focus(nodeID, options);\n  }\n  function HighlightGroup(group) {\n    var nodesMap = data.nodes.map(n => {\n      if (n.group === group) {\n        delete n.color;\n        n.size = 50;\n        return n;\n      } else {\n        delete n.size;\n        n.color = \"lightgrey\";\n        return n;\n      }\n    });\n    var edgesMap = data.edges.map(e => {\n      if (!(e.width === 20)) e.color = 'lightgrey';\n      return e;\n    });\n    data.nodes.update(nodesMap);\n    data.edges.update(edgesMap);\n  }\n  function HighlightEdges(edgeID) {\n    let nodeItems = data.nodes.map(n => {\n      if (!(n.size === 50)) {\n        n.color = \"lightgrey\";\n      }\n      return n;\n    });\n    let edgeItems = data.edges.map(e => {\n      if (e.id.split(\":\")[0] === edgeID) {\n        e.color = edgeOptions.get(edgeID).color;\n        e.width = 20;\n        return e;\n      } else {\n        e.color = \"lightgrey\";\n        e.width = 4;\n        return e;\n      }\n    });\n    data.nodes.update(nodeItems);\n    data.edges.update(edgeItems);\n  }\n  function getTitle(attributes) {\n    let str = \"\";\n    for (let [k, v] of Object.entries(attributes)) {\n      str = str + k + \": \" + v + \"\\n\";\n    }\n    return str;\n  }\n  const container = useRef(null);\n  const [nodeToEdit, setNodeToEdit] = useState({});\n  function setNodeEdit(node_id) {\n    var node = data.nodes.get(node_id);\n    setNodeToEdit(node);\n  }\n  function closePopUp() {\n    document.getElementById(\"node-saveButton\").onclick = null;\n    document.getElementById(\"node-closeButton\").onclick = null;\n    document.getElementById(\"node-popUp\").style.display = \"none\";\n  }\n  function saveEdits() {\n    var node = data.nodes.get(nodeToEdit.id);\n    node.attributes = nodeToEdit.attributes;\n    node.title = getTitle(node.attributes);\n    data.nodes.update(node);\n  }\n  useEffect(() => {\n    if (props.display.graph === \"block\") {\n      document.getElementById(\"networks-wrapper\").style.display = props.display.graph;\n      glmNetwork = new Network(container.current, data, options);\n      glmNetwork.on(\"stabilizationProgress\", function (params) {\n        var maxWidth = 360;\n        var minWidth = 1;\n        var widthFactor = params.iterations / params.total;\n        var width = Math.max(minWidth, maxWidth * widthFactor);\n        document.getElementById(\"circularProgress\").style.background = \"conic-gradient(#b25a00 \" + width + \"deg, #333 0deg)\";\n        document.getElementById(\"progressValue\").innerText = Math.round(widthFactor * 100) + \"%\";\n      });\n      glmNetwork.once(\"stabilizationIterationsDone\", function () {\n        document.getElementById(\"circularProgress\").style.background = \"conic-gradient(#b25a00 360deg, #333 0deg)\";\n        document.getElementById(\"progressValue\").innerText = \"100%\";\n        document.getElementById(\"circularProgress\").style.opacity = 0.7;\n        setTimeout(function () {\n          document.getElementById(\"circularProgress\").style.display = \"none\";\n        }, 500);\n        glmNetwork.setOptions({\n          physics: {\n            enabled: false\n          }\n        });\n      });\n      glmNetwork.on(\"doubleClick\", function (params) {\n        if (params.nodes[0] === undefined) {\n          alert(\"Double Click on a Node to edit\");\n        } else {\n          setNodeEdit(params.nodes[0]);\n          document.getElementById(\"node-popUp\").style.display = \"block\";\n        }\n      });\n    }\n  }, [container, props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      data: data.nodes,\n      togglePhy: TogglePhysics,\n      reset: Reset,\n      onFind: NodeFocus,\n      prev: Prev,\n      next: Next,\n      display: props.display.searchBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"node-popUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"node-operation\",\n        children: \"Edit Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          \"margin\": \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(nodeToEdit.attributes === undefined ? {} : nodeToEdit.attributes).map((_ref, index) => {\n            let [key, val] = _ref;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: val,\n                  onChange: e => {\n                    setNodeToEdit({\n                      ...nodeToEdit,\n                      attributes: {\n                        ...nodeToEdit.attributes,\n                        [key]: e.target.value\n                      }\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"save\",\n        id: \"node-saveButton\",\n        onClick: saveEdits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Close\",\n        id: \"node-closeButton\",\n        onClick: closePopUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"networks-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-network\",\n        ref: container\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"circularProgress\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"progressValue\",\n          children: \"0%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        findGroup: HighlightGroup,\n        findEdges: HighlightEdges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Graph, \"04k97il2FLj4pWH/MZ/3bt7m6wo=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Network","DataSet","SearchBar","Legend","loadImg","capacitorImg","inverterImg","meterImg","substationImg","generatorImg","nodeImg","Graph","props","dataFiles","visFiles","data","glmNetwork","counter","options","edges","smooth","enabled","type","nodes","shapeProperties","interpolation","groups","load","triplex_load","capacitor","triplex_node","substation","triplex_meter","node","meter","inverter","generator","interaction","hover","hideEdgesOnDrag","hideEdgesOnZoom","navigationButtons","physics","barnesHut","gravitationalConstant","springLength","springConstant","maxVelocity","minVelocity","solver","stabilization","iterations","updateInterval","onlyDynamicEdges","fit","edgeTypes","nodeTypes","parent_child_edge_types","nodeOptions","Map","edgeOptions","length","file","objs","objects","obj","objectType","name","includes","split","attributes","nodeID","push","id","label","group","get","title","getTitle","nodesDataSet","edgeFrom","from","edgeTo","to","edgeID","color","width","parent","undefined","inherit","edgesDataSet","TogglePhysics","toggle","setOptions","Reset","nodeItems","map","n","size","edgeItems","e","update","Prev","scale","animation","duration","easing","prev","filter","focus","Next","nxt","NodeFocus","HighlightGroup","nodesMap","edgesMap","HighlightEdges","str","k","v","Object","entries","container","nodeToEdit","setNodeToEdit","setNodeEdit","node_id","closePopUp","document","getElementById","onclick","style","display","saveEdits","graph","current","on","params","maxWidth","minWidth","widthFactor","total","Math","max","background","innerText","round","once","opacity","setTimeout","alert","searchBar","index","key","val","target","value"],"sources":["C:/Users/mend166/Documents/GitHub/glm_viz/vis_n_react/client/src/App/Graph.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport \"../styles/Graph.css\"\r\nimport {Network} from 'vis-network';\r\nimport { DataSet } from 'vis-data';\r\nimport SearchBar from './SearchBar';\r\nimport '../styles/vis-network.css';\r\nimport Legend from './Legend';\r\nimport loadImg from '../imgs/load.png';\r\nimport capacitorImg from '../imgs/capacitor.jpg';\r\nimport inverterImg from '../imgs/inverter.png';\r\nimport meterImg from '../imgs/meter.jpg';\r\nimport substationImg from '../imgs/substation.jpg';\r\nimport generatorImg from '../imgs/generator.jpg';\r\nimport nodeImg from '../imgs/node.png'\r\n\r\n// import IEE_DF from '../data/IEEE-123_Dynamic_fixed.json';\r\n// import IEE_INVF from '../data/IEEE-123_Inverters_fixed.json';\r\n// import IEE_GENF from '../data/IEEE-123_Diesels_fixed.json';\r\n\r\n// import IEEE_NFH from '../data/9500/IEEE_9500.json';\r\n// import IEEE_INV from '../data/9500/Inverters.json'\r\n// import IEEE_GEN from '../data/9500/Rotating_Machines.json'\r\n\r\n// const dataFiles = [IEEE_NFH, IEEE_INV, IEEE_GEN];\r\n\r\n\r\nconst Graph = (props) => {\r\n  const dataFiles = props.visFiles;\r\n  var data;\r\n  var glmNetwork = null;\r\n  var counter = -1;\r\n  const options = {\r\n    edges: {\r\n      smooth: {\r\n        enabled: true,\r\n        type: \"dynamic\"\r\n      }\r\n    },\r\n    nodes: {\r\n      shapeProperties: {\r\n        interpolation: false\r\n      }\r\n    },\r\n    groups:{\r\n      load: {\"color\": \"#2a9d8f\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": loadImg},\r\n      triplex_load:{\"color\": \"#ffea00\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": loadImg},\r\n      capacitor:{\"color\": \"#283618\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": capacitorImg},\r\n      triplex_node:{\"color\": \"#003566\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": nodeImg},\r\n      substation:{\"color\": \"#fca311\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": substationImg},\r\n      triplex_meter:{\"color\": \"#072ac8\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\",\"image\": meterImg},\r\n      node:{\"color\": \"#4361ee\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": nodeImg},\r\n      meter:{\"color\": \"#d90429\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": meterImg},\r\n      inverter:{\"color\": \"#c8b6ff\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": inverterImg},\r\n      generator:{\"color\": \"#fee440\",\"size\": 25, \"borderWidth\": 4, \"shape\": \"circularImage\", \"image\": generatorImg},\r\n    },\r\n    interaction: {\r\n      hover:true,\r\n      hideEdgesOnDrag: true,\r\n      hideEdgesOnZoom: true,\r\n      navigationButtons: true\r\n    },\r\n    physics: {\r\n      barnesHut: {\r\n        gravitationalConstant: -80000,\r\n        springLength: 200,\r\n        springConstant: 0.50,\r\n      },\r\n      maxVelocity: 150,\r\n      minVelocity: 0.75,\r\n      solver: 'barnesHut',\r\n      stabilization: {\r\n        enabled: true,\r\n        iterations: 1000,\r\n        updateInterval: 1,\r\n        onlyDynamicEdges: false,\r\n        fit: true\r\n      },\r\n    },\r\n  };\r\n  const edgeTypes = [\"overhead_line\", \"switch\", \"underground_line\", \"series_reactor\", \"triplex_line\", \"regulator\",\"transformer\"];\r\n  const nodeTypes = [\"load\", \"triplex_load\",\"capacitor\", \"node\", \"triplex_node\",\"substation\",\r\n                      \"meter\", \"triplex_meter\", \"inverter_dyn\", \"inverter\", \"diesel_dg\"];\r\n  const parent_child_edge_types = [\"capacitor\", \"triplex_meter\", \"triplex_load\", \"meter\"];\r\n  \r\n  const nodeOptions = new Map([[\"load\", {\"group\": \"load\"}],\r\n                      [\"triplex_load\", {\"group\": \"triplex_load\"}],\r\n                      [\"capacitor\", {\"group\": \"capacitor\"}],\r\n                      [\"triplex_node\", {\"group\": \"triplex_node\"}],\r\n                      [\"substation\", {\"group\": \"substation\"}],\r\n                      [\"triplex_meter\", {\"group\": \"triplex_meter\"}],\r\n                      [\"node\", {\"group\": \"node\"}],\r\n                      [\"meter\", {\"group\": \"meter\"}],\r\n                      [\"inverter\", {\"group\": \"inverter\"}],\r\n                      [\"inverter_dyn\", {\"group\": \"inverter\"}],\r\n                      [\"diesel_dg\", {\"group\": \"generator\"}]]);\r\n  \r\n  const edgeOptions = new Map([[\"overhead_line\", {\"width\": 4, \"color\": \"#000000\"}],\r\n                              [\"switch\", {\"width\": 4, \"color\": \"#3a0ca3\"}],\r\n                              [\"series_reactor\", {\"width\": 4, \"color\": \"#8c0000\"}],\r\n                              [\"triplex_line\", {\"width\": 4, \"color\": \"#c86bfa\"}],\r\n                              [\"underground_line\", {\"width\": 4, \"color\": \"#FFFF00\"}],\r\n                              [\"regulator\", {\"width\": 4, \"color\": \"#ff447d\"}],\r\n                              [\"transformer\", {\"width\": 4,\"color\": \"#00FF00\"}]]);\r\n  \r\n  var nodes = [];\r\n  if(dataFiles.length > 0)\r\n  {\r\n    for (let file of dataFiles)\r\n    {\r\n      var objs = file.objects;\r\n    \r\n      for (let obj of objs)\r\n      {\r\n        var objectType = obj.name.includes(\":\") ? obj.name.split(\":\")[0] : obj.name;\r\n        var attributes = obj.attributes;\r\n        if (nodeTypes.includes(objectType))\r\n        {\r\n          var nodeID = attributes.name;\r\n          nodes.push({id: nodeID, label: nodeID,\r\n                      attributes: attributes,\r\n                      group: nodeOptions.get(objectType).group,\r\n                      title: \"Object Type: \" + objectType + \"\\n\" + getTitle(attributes)});\r\n        }\r\n      }\r\n    }\r\n    var nodesDataSet = new DataSet(nodes);\r\n    \r\n    const edges = [];\r\n    for (let file of dataFiles)\r\n    {\r\n      objs = file.objects;\r\n    \r\n      for (let obj of objs)\r\n      {\r\n        objectType = obj.name.includes(\":\") ? obj.name.split(\":\")[0] : obj.name;\r\n        attributes = obj.attributes;\r\n        if (edgeTypes.includes(objectType))\r\n        {\r\n          var edgeFrom = attributes.from.includes(\":\") ? attributes.from.split(\":\")[1] : attributes.from;\r\n          var edgeTo = attributes.to.includes(\":\") ? attributes.to.split(\":\")[1] : attributes.to;\r\n          var edgeID = obj.name.includes(\":\") ? obj.name : objectType + \":\" + attributes.name;\r\n    \r\n          edges.push({from: edgeFrom, to: edgeTo,\r\n                    id: edgeID,\r\n                    color: edgeOptions.get(objectType).color,\r\n                    width: edgeOptions.get(objectType).width,\r\n                    title: \"Object Type: \" + objectType + \"\\n\" + getTitle(attributes)});\r\n        }\r\n        else if (parent_child_edge_types.includes(objectType))\r\n        {\r\n          nodeID = attributes.name;\r\n          var parent = attributes.parent;\r\n    \r\n          if(parent !== undefined)\r\n          {\r\n            edges.push({from: parent, to: nodeID, color: {inherit: true}});\r\n          }\r\n        }\r\n        else if(nodeTypes.includes(objectType))\r\n        {\r\n          nodeID = attributes.name;\r\n          parent = attributes.parent;\r\n          \r\n          if(parent !== undefined)\r\n          {\r\n            edges.push({from: parent, to: nodeID, color: {inherit: true}});\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var edgesDataSet = new DataSet(edges);\r\n    \r\n    data = {\r\n      nodes: nodesDataSet,\r\n      edges: edgesDataSet\r\n    }\r\n  }\r\n\r\n  function TogglePhysics(toggle)\r\n  {\r\n    if(toggle)\r\n    {\r\n      glmNetwork.setOptions({physics: {enabled: true}})\r\n    }\r\n    else\r\n    {\r\n      glmNetwork.setOptions({physics: {enabled: false}})\r\n    }\r\n  }\r\n  \r\n  function Reset() {\r\n    let nodeItems = data.nodes.map((n) => {\r\n      if(n.color)\r\n      {\r\n        delete n.color;\r\n        return n;\r\n      }\r\n      else if(n.size)\r\n      {\r\n        delete n.size;\r\n        return n;\r\n      }\r\n    });\r\n    \r\n    let edgeItems = data.edges.map((e) => {\r\n      if(e.width === 20)\r\n      {\r\n        e.width = 4;\r\n        return e;\r\n      }\r\n      else if(edgeTypes.includes(e.id.split(\":\")[0]))\r\n      {\r\n        e.color = edgeOptions.get(e.id.split(\":\")[0]).color;\r\n        e.width = edgeOptions.get(e.id.split(\":\")[0]).width;\r\n        return e;\r\n      }\r\n      else\r\n      {\r\n        e.color = {inherit: true};\r\n        return e;\r\n      }\r\n    });\r\n  \r\n    data.nodes.update(nodeItems);\r\n    data.edges.update(edgeItems);\r\n    glmNetwork.fit();\r\n    counter = 0;\r\n  }\r\n  \r\n  function Prev()\r\n  {\r\n    var options = {\r\n      scale: 1,\r\n      animation: {\r\n        duration: 1000,\r\n        easing: \"easeInOutQuart\"\r\n      }\r\n    };\r\n  \r\n    var prev = data.nodes.get({\r\n      filter: function (n) {\r\n        return (n.size === 50);\r\n      }\r\n    });\r\n  \r\n    counter--;\r\n    if(counter < 0)\r\n    {\r\n      counter = prev.length - 1;\r\n    }\r\n    glmNetwork.focus(prev[counter].id, options)\r\n  }\r\n  \r\n  function Next()\r\n  {\r\n    var options = {\r\n      scale: 1,\r\n      animation: {\r\n        duration: 1000,\r\n        easing: \"easeInOutQuart\"\r\n      }\r\n    };\r\n  \r\n    var nxt = data.nodes.get({\r\n      filter: function (n) {\r\n        return (n.size === 50);\r\n      }\r\n    });\r\n  \r\n    counter++;\r\n    if(counter >= nxt.length)\r\n    {\r\n      counter = 0;\r\n      glmNetwork.focus(nxt[counter].id, options)\r\n    }\r\n    else\r\n    {\r\n      glmNetwork.focus(nxt[counter].id, options)\r\n    }\r\n  }\r\n  \r\n  function NodeFocus(nodeID)\r\n  {\r\n    var options = {\r\n      scale: 1,\r\n      animation: {\r\n        duration: 1000,\r\n        easing: \"easeInOutQuart\"\r\n      }\r\n    };\r\n  \r\n    glmNetwork.focus(nodeID, options)\r\n  }\r\n  \r\n  function HighlightGroup(group)\r\n  {\r\n    var nodesMap = data.nodes.map((n) => {\r\n      if(n.group === group)\r\n      {\r\n        delete n.color;\r\n        n.size = 50;\r\n        return n;\r\n      }\r\n      else\r\n      {\r\n        delete n.size;\r\n        n.color = \"lightgrey\";\r\n        return n;\r\n      }\r\n    });\r\n  \r\n    var edgesMap = data.edges.map((e) => {\r\n      if(!(e.width === 20))\r\n        e.color = 'lightgrey';\r\n  \r\n        return e;\r\n    });\r\n  \r\n    data.nodes.update(nodesMap);\r\n    data.edges.update(edgesMap);\r\n  }\r\n  \r\n  function HighlightEdges(edgeID)\r\n  {\r\n    let nodeItems = data.nodes.map((n) => {\r\n      if (!(n.size === 50))\r\n      {\r\n        n.color = \"lightgrey\";\r\n      }\r\n      return n;\r\n    });\r\n    \r\n    let edgeItems = data.edges.map((e) => {\r\n      if(e.id.split(\":\")[0] === edgeID)\r\n      {\r\n        e.color = edgeOptions.get(edgeID).color;\r\n        e.width = 20;\r\n        return e;\r\n      }\r\n      else\r\n      {\r\n        e.color = \"lightgrey\";\r\n        e.width = 4;\r\n        return e;\r\n      }\r\n    });\r\n    \r\n    data.nodes.update(nodeItems);\r\n    data.edges.update(edgeItems);\r\n  }\r\n  \r\n  function getTitle(attributes)\r\n  {\r\n    let str = \"\";\r\n    for (let [k, v] of Object.entries(attributes))\r\n    {\r\n      str = str + k +\": \" + v +\"\\n\";\r\n    }\r\n    return str;\r\n  }\r\n\r\n  const container = useRef(null);\r\n  const [nodeToEdit, setNodeToEdit] = useState({})\r\n  \r\n  function setNodeEdit(node_id)\r\n  {\r\n    var node = data.nodes.get(node_id);\r\n    setNodeToEdit(node);\r\n  }\r\n\r\n  function closePopUp() \r\n  {\r\n    document.getElementById(\"node-saveButton\").onclick = null;\r\n    document.getElementById(\"node-closeButton\").onclick = null;\r\n    document.getElementById(\"node-popUp\").style.display = \"none\";\r\n  }\r\n\r\n  function saveEdits() {\r\n    var node = data.nodes.get(nodeToEdit.id);\r\n    node.attributes = nodeToEdit.attributes;\r\n    node.title = getTitle(node.attributes);\r\n    data.nodes.update(node);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.display.graph === \"block\")\r\n    {\r\n      document.getElementById(\"networks-wrapper\").style.display = props.display.graph;\r\n      glmNetwork = new Network(container.current, data, options);\r\n      \r\n      glmNetwork.on(\"stabilizationProgress\", function (params) {\r\n\r\n        var maxWidth = 360;\r\n        var minWidth = 1;\r\n        var widthFactor = params.iterations / params.total;\r\n        var width = Math.max(minWidth, maxWidth * widthFactor);\r\n        document.getElementById(\"circularProgress\").style.background = \"conic-gradient(#b25a00 \"+ width +\"deg, #333 0deg)\";\r\n        document.getElementById(\"progressValue\").innerText = Math.round(widthFactor * 100) + \"%\";\r\n      \r\n      });\r\n      \r\n      glmNetwork.once(\"stabilizationIterationsDone\", function () {\r\n\r\n        document.getElementById(\"circularProgress\").style.background = \"conic-gradient(#b25a00 360deg, #333 0deg)\";\r\n        document.getElementById(\"progressValue\").innerText = \"100%\";\r\n        document.getElementById(\"circularProgress\").style.opacity = 0.7;\r\n\r\n        setTimeout(function () {\r\n          document.getElementById(\"circularProgress\").style.display = \"none\";\r\n        }, 500);\r\n\r\n        glmNetwork.setOptions({physics: {enabled: false}})\r\n      });\r\n      \r\n      glmNetwork.on(\"doubleClick\", function (params) {\r\n        if (params.nodes[0] === undefined)\r\n        {\r\n          alert(\"Double Click on a Node to edit\")\r\n        }\r\n        else\r\n        {\r\n          setNodeEdit(params.nodes[0]);\r\n          document.getElementById(\"node-popUp\").style.display = \"block\";\r\n        }\r\n        \r\n      });\r\n    }\r\n  }, [container, props]); \r\n\r\n  return (\r\n    <>\r\n      <SearchBar \r\n        data = {data.nodes}\r\n        togglePhy = {TogglePhysics}\r\n        reset = {Reset} \r\n        onFind = {NodeFocus}\r\n        prev = {Prev}\r\n        next = {Next}\r\n        display = {props.display.searchBar}\r\n      />\r\n\r\n      <div id=\"node-popUp\">\r\n        <span id=\"node-operation\">Edit Node</span> <br />\r\n        <table style={{\"margin\": \"auto\"}}>\r\n          <tbody>\r\n            {\r\n              Object.entries(nodeToEdit.attributes === undefined ? {} : nodeToEdit.attributes).map(([key, val], index) => {\r\n                return(\r\n                  <tr key={index} >\r\n                    <td>{key}</td>\r\n                    <td>\r\n                      <input value={val} onChange = {(e) => {\r\n                          setNodeToEdit({...nodeToEdit, attributes: {...nodeToEdit.attributes, [key]: e.target.value}});\r\n                        }}>\r\n                      </input>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }) \r\n            }\r\n          </tbody>\r\n        </table>\r\n        <input type=\"button\" value=\"save\" id=\"node-saveButton\" onClick={saveEdits}/>\r\n        <input type=\"button\" value=\"Close\" id=\"node-closeButton\" onClick={closePopUp}/>\r\n      </div>\r\n\r\n      <div id = \"networks-wrapper\">\r\n        <div className='main-network' ref={container}/>\r\n        <div id='circularProgress'>\r\n          <span id='progressValue'>0%</span>\r\n        </div>\r\n        <Legend findGroup = {HighlightGroup} findEdges = {HighlightEdges}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Graph;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACxD,OAAO,qBAAqB;AAC5B,SAAQC,OAAO,QAAO,aAAa;AACnC,SAASC,OAAO,QAAQ,UAAU;AAClC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,2BAA2B;AAClC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,OAAO,MAAM,kBAAkB;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAGA,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAA;EACvB,MAAMC,SAAS,GAAGD,KAAK,CAACE,QAAQ;EAChC,IAAIC,IAAI;EACR,IAAIC,UAAU,GAAG,IAAI;EACrB,IAAIC,OAAO,GAAG,CAAC,CAAC;EAChB,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,MAAM,EAAE;QACNC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,KAAK,EAAE;MACLC,eAAe,EAAE;QACfC,aAAa,EAAE;MACjB;IACF,CAAC;IACDC,MAAM,EAAC;MACLC,IAAI,EAAE;QAAC,OAAO,EAAE,SAAS;QAAC,MAAM,EAAE,EAAE;QAAE,aAAa,EAAE,CAAC;QAAE,OAAO,EAAE,eAAe;QAAE,OAAO,EAAEvB;MAAO,CAAC;MACnGwB,YAAY,EAAC;QAAC,OAAO,EAAE,SAAS;QAAC,MAAM,EAAE,EAAE;QAAE,aAAa,EAAE,CAAC;QAAE,OAAO,EAAE,eAAe;QAAC,OAAO,EAAExB;MAAO,CAAC;MACzGyB,SAAS,EAAC;QAAC,OAAO,EAAE,SAAS;QAAC,MAAM,EAAE,EAAE;QAAE,aAAa,EAAE,CAAC;QAAE,OAAO,EAAE,eAAe;QAAC,OAAO,EAAExB;MAAY,CAAC;MAC3GyB,YAAY,EAAC;QAAC,OAAO,EAAE,SAAS;QAAC,MAAM,EAAE,EAAE;QAAE,aAAa,EAAE,CAAC;QAAE,OAAO,EAAE,eAAe;QAAC,OAAO,EAAEpB;MAAO,CAAC;MACzGqB,UAAU,EAAC;QAAC,OAAO,EAAE,SAAS;QAAC,MAAM,EAAE,EAAE;QAAE,aAAa,EAAE,CAAC;QAAE,OAAO,EAAE,eAAe;QAAC,OAAO,EAAEvB;MAAa,CAAC;MAC7GwB,aAAa,EAAC;QAAC,OAAO,EAAE,SAAS;QAAC,MAAM,EAAE,EAAE;QAAE,aAAa,EAAE,CAAC;QAAE,OAAO,EAAE,eAAe;QAAC,OAAO,EAAEzB;MAAQ,CAAC;MAC3G0B,IAAI,EAAC;QAAC,OAAO,EAAE,SAAS;QAAC,MAAM,EAAE,EAAE;QAAE,aAAa,EAAE,CAAC;QAAE,OAAO,EAAE,eAAe;QAAE,OAAO,EAAEvB;MAAO,CAAC;MAClGwB,KAAK,EAAC;QAAC,OAAO,EAAE,SAAS;QAAC,MAAM,EAAE,EAAE;QAAE,aAAa,EAAE,CAAC;QAAE,OAAO,EAAE,eAAe;QAAE,OAAO,EAAE3B;MAAQ,CAAC;MACpG4B,QAAQ,EAAC;QAAC,OAAO,EAAE,SAAS;QAAC,MAAM,EAAE,EAAE;QAAE,aAAa,EAAE,CAAC;QAAE,OAAO,EAAE,eAAe;QAAE,OAAO,EAAE7B;MAAW,CAAC;MAC1G8B,SAAS,EAAC;QAAC,OAAO,EAAE,SAAS;QAAC,MAAM,EAAE,EAAE;QAAE,aAAa,EAAE,CAAC;QAAE,OAAO,EAAE,eAAe;QAAE,OAAO,EAAE3B;MAAY;IAC7G,CAAC;IACD4B,WAAW,EAAE;MACXC,KAAK,EAAC,IAAI;MACVC,eAAe,EAAE,IAAI;MACrBC,eAAe,EAAE,IAAI;MACrBC,iBAAiB,EAAE;IACrB,CAAC;IACDC,OAAO,EAAE;MACPC,SAAS,EAAE;QACTC,qBAAqB,EAAE,CAAC,KAAK;QAC7BC,YAAY,EAAE,GAAG;QACjBC,cAAc,EAAE;MAClB,CAAC;MACDC,WAAW,EAAE,GAAG;MAChBC,WAAW,EAAE,IAAI;MACjBC,MAAM,EAAE,WAAW;MACnBC,aAAa,EAAE;QACb7B,OAAO,EAAE,IAAI;QACb8B,UAAU,EAAE,IAAI;QAChBC,cAAc,EAAE,CAAC;QACjBC,gBAAgB,EAAE,KAAK;QACvBC,GAAG,EAAE;MACP;IACF;EACF,CAAC;EACD,MAAMC,SAAS,GAAG,CAAC,eAAe,EAAE,QAAQ,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,cAAc,EAAE,WAAW,EAAC,aAAa,CAAC;EAC9H,MAAMC,SAAS,GAAG,CAAC,MAAM,EAAE,cAAc,EAAC,WAAW,EAAE,MAAM,EAAE,cAAc,EAAC,YAAY,EACtE,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,CAAC;EACtF,MAAMC,uBAAuB,GAAG,CAAC,WAAW,EAAE,eAAe,EAAE,cAAc,EAAE,OAAO,CAAC;EAEvF,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE;IAAC,OAAO,EAAE;EAAM,CAAC,CAAC,EACpC,CAAC,cAAc,EAAE;IAAC,OAAO,EAAE;EAAc,CAAC,CAAC,EAC3C,CAAC,WAAW,EAAE;IAAC,OAAO,EAAE;EAAW,CAAC,CAAC,EACrC,CAAC,cAAc,EAAE;IAAC,OAAO,EAAE;EAAc,CAAC,CAAC,EAC3C,CAAC,YAAY,EAAE;IAAC,OAAO,EAAE;EAAY,CAAC,CAAC,EACvC,CAAC,eAAe,EAAE;IAAC,OAAO,EAAE;EAAe,CAAC,CAAC,EAC7C,CAAC,MAAM,EAAE;IAAC,OAAO,EAAE;EAAM,CAAC,CAAC,EAC3B,CAAC,OAAO,EAAE;IAAC,OAAO,EAAE;EAAO,CAAC,CAAC,EAC7B,CAAC,UAAU,EAAE;IAAC,OAAO,EAAE;EAAU,CAAC,CAAC,EACnC,CAAC,cAAc,EAAE;IAAC,OAAO,EAAE;EAAU,CAAC,CAAC,EACvC,CAAC,WAAW,EAAE;IAAC,OAAO,EAAE;EAAW,CAAC,CAAC,CAAC,CAAC;EAE3D,MAAMC,WAAW,GAAG,IAAID,GAAG,CAAC,CAAC,CAAC,eAAe,EAAE;IAAC,OAAO,EAAE,CAAC;IAAE,OAAO,EAAE;EAAS,CAAC,CAAC,EACpD,CAAC,QAAQ,EAAE;IAAC,OAAO,EAAE,CAAC;IAAE,OAAO,EAAE;EAAS,CAAC,CAAC,EAC5C,CAAC,gBAAgB,EAAE;IAAC,OAAO,EAAE,CAAC;IAAE,OAAO,EAAE;EAAS,CAAC,CAAC,EACpD,CAAC,cAAc,EAAE;IAAC,OAAO,EAAE,CAAC;IAAE,OAAO,EAAE;EAAS,CAAC,CAAC,EAClD,CAAC,kBAAkB,EAAE;IAAC,OAAO,EAAE,CAAC;IAAE,OAAO,EAAE;EAAS,CAAC,CAAC,EACtD,CAAC,WAAW,EAAE;IAAC,OAAO,EAAE,CAAC;IAAE,OAAO,EAAE;EAAS,CAAC,CAAC,EAC/C,CAAC,aAAa,EAAE;IAAC,OAAO,EAAE,CAAC;IAAC,OAAO,EAAE;EAAS,CAAC,CAAC,CAAC,CAAC;EAE9E,IAAIpC,KAAK,GAAG,EAAE;EACd,IAAGV,SAAS,CAACgD,MAAM,GAAG,CAAC,EACvB;IACE,KAAK,IAAIC,IAAI,IAAIjD,SAAS,EAC1B;MACE,IAAIkD,IAAI,GAAGD,IAAI,CAACE,OAAO;MAEvB,KAAK,IAAIC,GAAG,IAAIF,IAAI,EACpB;QACE,IAAIG,UAAU,GAAGD,GAAG,CAACE,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,GAAGH,GAAG,CAACE,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGJ,GAAG,CAACE,IAAI;QAC3E,IAAIG,UAAU,GAAGL,GAAG,CAACK,UAAU;QAC/B,IAAId,SAAS,CAACY,QAAQ,CAACF,UAAU,CAAC,EAClC;UACE,IAAIK,MAAM,GAAGD,UAAU,CAACH,IAAI;UAC5B5C,KAAK,CAACiD,IAAI,CAAC;YAACC,EAAE,EAAEF,MAAM;YAAEG,KAAK,EAAEH,MAAM;YACzBD,UAAU,EAAEA,UAAU;YACtBK,KAAK,EAAEjB,WAAW,CAACkB,GAAG,CAACV,UAAU,CAAC,CAACS,KAAK;YACxCE,KAAK,EAAE,eAAe,GAAGX,UAAU,GAAG,IAAI,GAAGY,QAAQ,CAACR,UAAU;UAAC,CAAC,CAAC;QACjF;MACF;IACF;IACA,IAAIS,YAAY,GAAG,IAAI9E,OAAO,CAACsB,KAAK,CAAC;IAErC,MAAMJ,KAAK,GAAG,EAAE;IAChB,KAAK,IAAI2C,IAAI,IAAIjD,SAAS,EAC1B;MACEkD,IAAI,GAAGD,IAAI,CAACE,OAAO;MAEnB,KAAK,IAAIC,GAAG,IAAIF,IAAI,EACpB;QACEG,UAAU,GAAGD,GAAG,CAACE,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,GAAGH,GAAG,CAACE,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGJ,GAAG,CAACE,IAAI;QACvEG,UAAU,GAAGL,GAAG,CAACK,UAAU;QAC3B,IAAIf,SAAS,CAACa,QAAQ,CAACF,UAAU,CAAC,EAClC;UACE,IAAIc,QAAQ,GAAGV,UAAU,CAACW,IAAI,CAACb,QAAQ,CAAC,GAAG,CAAC,GAAGE,UAAU,CAACW,IAAI,CAACZ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGC,UAAU,CAACW,IAAI;UAC9F,IAAIC,MAAM,GAAGZ,UAAU,CAACa,EAAE,CAACf,QAAQ,CAAC,GAAG,CAAC,GAAGE,UAAU,CAACa,EAAE,CAACd,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGC,UAAU,CAACa,EAAE;UACtF,IAAIC,MAAM,GAAGnB,GAAG,CAACE,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,GAAGH,GAAG,CAACE,IAAI,GAAGD,UAAU,GAAG,GAAG,GAAGI,UAAU,CAACH,IAAI;UAEnFhD,KAAK,CAACqD,IAAI,CAAC;YAACS,IAAI,EAAED,QAAQ;YAAEG,EAAE,EAAED,MAAM;YAC5BT,EAAE,EAAEW,MAAM;YACVC,KAAK,EAAEzB,WAAW,CAACgB,GAAG,CAACV,UAAU,CAAC,CAACmB,KAAK;YACxCC,KAAK,EAAE1B,WAAW,CAACgB,GAAG,CAACV,UAAU,CAAC,CAACoB,KAAK;YACxCT,KAAK,EAAE,eAAe,GAAGX,UAAU,GAAG,IAAI,GAAGY,QAAQ,CAACR,UAAU;UAAC,CAAC,CAAC;QAC/E,CAAC,MACI,IAAIb,uBAAuB,CAACW,QAAQ,CAACF,UAAU,CAAC,EACrD;UACEK,MAAM,GAAGD,UAAU,CAACH,IAAI;UACxB,IAAIoB,MAAM,GAAGjB,UAAU,CAACiB,MAAM;UAE9B,IAAGA,MAAM,KAAKC,SAAS,EACvB;YACErE,KAAK,CAACqD,IAAI,CAAC;cAACS,IAAI,EAAEM,MAAM;cAAEJ,EAAE,EAAEZ,MAAM;cAAEc,KAAK,EAAE;gBAACI,OAAO,EAAE;cAAI;YAAC,CAAC,CAAC;UAChE;QACF,CAAC,MACI,IAAGjC,SAAS,CAACY,QAAQ,CAACF,UAAU,CAAC,EACtC;UACEK,MAAM,GAAGD,UAAU,CAACH,IAAI;UACxBoB,MAAM,GAAGjB,UAAU,CAACiB,MAAM;UAE1B,IAAGA,MAAM,KAAKC,SAAS,EACvB;YACErE,KAAK,CAACqD,IAAI,CAAC;cAACS,IAAI,EAAEM,MAAM;cAAEJ,EAAE,EAAEZ,MAAM;cAAEc,KAAK,EAAE;gBAACI,OAAO,EAAE;cAAI;YAAC,CAAC,CAAC;UAChE;QACF;MACF;IACF;IACA,IAAIC,YAAY,GAAG,IAAIzF,OAAO,CAACkB,KAAK,CAAC;IAErCJ,IAAI,GAAG;MACLQ,KAAK,EAAEwD,YAAY;MACnB5D,KAAK,EAAEuE;IACT,CAAC;EACH;EAEA,SAASC,aAAa,CAACC,MAAM,EAC7B;IACE,IAAGA,MAAM,EACT;MACE5E,UAAU,CAAC6E,UAAU,CAAC;QAACnD,OAAO,EAAE;UAACrB,OAAO,EAAE;QAAI;MAAC,CAAC,CAAC;IACnD,CAAC,MAED;MACEL,UAAU,CAAC6E,UAAU,CAAC;QAACnD,OAAO,EAAE;UAACrB,OAAO,EAAE;QAAK;MAAC,CAAC,CAAC;IACpD;EACF;EAEA,SAASyE,KAAK,GAAG;IACf,IAAIC,SAAS,GAAGhF,IAAI,CAACQ,KAAK,CAACyE,GAAG,CAAEC,CAAC,IAAK;MACpC,IAAGA,CAAC,CAACZ,KAAK,EACV;QACE,OAAOY,CAAC,CAACZ,KAAK;QACd,OAAOY,CAAC;MACV,CAAC,MACI,IAAGA,CAAC,CAACC,IAAI,EACd;QACE,OAAOD,CAAC,CAACC,IAAI;QACb,OAAOD,CAAC;MACV;IACF,CAAC,CAAC;IAEF,IAAIE,SAAS,GAAGpF,IAAI,CAACI,KAAK,CAAC6E,GAAG,CAAEI,CAAC,IAAK;MACpC,IAAGA,CAAC,CAACd,KAAK,KAAK,EAAE,EACjB;QACEc,CAAC,CAACd,KAAK,GAAG,CAAC;QACX,OAAOc,CAAC;MACV,CAAC,MACI,IAAG7C,SAAS,CAACa,QAAQ,CAACgC,CAAC,CAAC3B,EAAE,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9C;QACE+B,CAAC,CAACf,KAAK,GAAGzB,WAAW,CAACgB,GAAG,CAACwB,CAAC,CAAC3B,EAAE,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACgB,KAAK;QACnDe,CAAC,CAACd,KAAK,GAAG1B,WAAW,CAACgB,GAAG,CAACwB,CAAC,CAAC3B,EAAE,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACiB,KAAK;QACnD,OAAOc,CAAC;MACV,CAAC,MAED;QACEA,CAAC,CAACf,KAAK,GAAG;UAACI,OAAO,EAAE;QAAI,CAAC;QACzB,OAAOW,CAAC;MACV;IACF,CAAC,CAAC;IAEFrF,IAAI,CAACQ,KAAK,CAAC8E,MAAM,CAACN,SAAS,CAAC;IAC5BhF,IAAI,CAACI,KAAK,CAACkF,MAAM,CAACF,SAAS,CAAC;IAC5BnF,UAAU,CAACsC,GAAG,EAAE;IAChBrC,OAAO,GAAG,CAAC;EACb;EAEA,SAASqF,IAAI,GACb;IACE,IAAIpF,OAAO,GAAG;MACZqF,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE;QACTC,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE;MACV;IACF,CAAC;IAED,IAAIC,IAAI,GAAG5F,IAAI,CAACQ,KAAK,CAACqD,GAAG,CAAC;MACxBgC,MAAM,EAAE,UAAUX,CAAC,EAAE;QACnB,OAAQA,CAAC,CAACC,IAAI,KAAK,EAAE;MACvB;IACF,CAAC,CAAC;IAEFjF,OAAO,EAAE;IACT,IAAGA,OAAO,GAAG,CAAC,EACd;MACEA,OAAO,GAAG0F,IAAI,CAAC9C,MAAM,GAAG,CAAC;IAC3B;IACA7C,UAAU,CAAC6F,KAAK,CAACF,IAAI,CAAC1F,OAAO,CAAC,CAACwD,EAAE,EAAEvD,OAAO,CAAC;EAC7C;EAEA,SAAS4F,IAAI,GACb;IACE,IAAI5F,OAAO,GAAG;MACZqF,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE;QACTC,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE;MACV;IACF,CAAC;IAED,IAAIK,GAAG,GAAGhG,IAAI,CAACQ,KAAK,CAACqD,GAAG,CAAC;MACvBgC,MAAM,EAAE,UAAUX,CAAC,EAAE;QACnB,OAAQA,CAAC,CAACC,IAAI,KAAK,EAAE;MACvB;IACF,CAAC,CAAC;IAEFjF,OAAO,EAAE;IACT,IAAGA,OAAO,IAAI8F,GAAG,CAAClD,MAAM,EACxB;MACE5C,OAAO,GAAG,CAAC;MACXD,UAAU,CAAC6F,KAAK,CAACE,GAAG,CAAC9F,OAAO,CAAC,CAACwD,EAAE,EAAEvD,OAAO,CAAC;IAC5C,CAAC,MAED;MACEF,UAAU,CAAC6F,KAAK,CAACE,GAAG,CAAC9F,OAAO,CAAC,CAACwD,EAAE,EAAEvD,OAAO,CAAC;IAC5C;EACF;EAEA,SAAS8F,SAAS,CAACzC,MAAM,EACzB;IACE,IAAIrD,OAAO,GAAG;MACZqF,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE;QACTC,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE;MACV;IACF,CAAC;IAED1F,UAAU,CAAC6F,KAAK,CAACtC,MAAM,EAAErD,OAAO,CAAC;EACnC;EAEA,SAAS+F,cAAc,CAACtC,KAAK,EAC7B;IACE,IAAIuC,QAAQ,GAAGnG,IAAI,CAACQ,KAAK,CAACyE,GAAG,CAAEC,CAAC,IAAK;MACnC,IAAGA,CAAC,CAACtB,KAAK,KAAKA,KAAK,EACpB;QACE,OAAOsB,CAAC,CAACZ,KAAK;QACdY,CAAC,CAACC,IAAI,GAAG,EAAE;QACX,OAAOD,CAAC;MACV,CAAC,MAED;QACE,OAAOA,CAAC,CAACC,IAAI;QACbD,CAAC,CAACZ,KAAK,GAAG,WAAW;QACrB,OAAOY,CAAC;MACV;IACF,CAAC,CAAC;IAEF,IAAIkB,QAAQ,GAAGpG,IAAI,CAACI,KAAK,CAAC6E,GAAG,CAAEI,CAAC,IAAK;MACnC,IAAG,EAAEA,CAAC,CAACd,KAAK,KAAK,EAAE,CAAC,EAClBc,CAAC,CAACf,KAAK,GAAG,WAAW;MAErB,OAAOe,CAAC;IACZ,CAAC,CAAC;IAEFrF,IAAI,CAACQ,KAAK,CAAC8E,MAAM,CAACa,QAAQ,CAAC;IAC3BnG,IAAI,CAACI,KAAK,CAACkF,MAAM,CAACc,QAAQ,CAAC;EAC7B;EAEA,SAASC,cAAc,CAAChC,MAAM,EAC9B;IACE,IAAIW,SAAS,GAAGhF,IAAI,CAACQ,KAAK,CAACyE,GAAG,CAAEC,CAAC,IAAK;MACpC,IAAI,EAAEA,CAAC,CAACC,IAAI,KAAK,EAAE,CAAC,EACpB;QACED,CAAC,CAACZ,KAAK,GAAG,WAAW;MACvB;MACA,OAAOY,CAAC;IACV,CAAC,CAAC;IAEF,IAAIE,SAAS,GAAGpF,IAAI,CAACI,KAAK,CAAC6E,GAAG,CAAEI,CAAC,IAAK;MACpC,IAAGA,CAAC,CAAC3B,EAAE,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKe,MAAM,EAChC;QACEgB,CAAC,CAACf,KAAK,GAAGzB,WAAW,CAACgB,GAAG,CAACQ,MAAM,CAAC,CAACC,KAAK;QACvCe,CAAC,CAACd,KAAK,GAAG,EAAE;QACZ,OAAOc,CAAC;MACV,CAAC,MAED;QACEA,CAAC,CAACf,KAAK,GAAG,WAAW;QACrBe,CAAC,CAACd,KAAK,GAAG,CAAC;QACX,OAAOc,CAAC;MACV;IACF,CAAC,CAAC;IAEFrF,IAAI,CAACQ,KAAK,CAAC8E,MAAM,CAACN,SAAS,CAAC;IAC5BhF,IAAI,CAACI,KAAK,CAACkF,MAAM,CAACF,SAAS,CAAC;EAC9B;EAEA,SAASrB,QAAQ,CAACR,UAAU,EAC5B;IACE,IAAI+C,GAAG,GAAG,EAAE;IACZ,KAAK,IAAI,CAACC,CAAC,EAAEC,CAAC,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACnD,UAAU,CAAC,EAC7C;MACE+C,GAAG,GAAGA,GAAG,GAAGC,CAAC,GAAE,IAAI,GAAGC,CAAC,GAAE,IAAI;IAC/B;IACA,OAAOF,GAAG;EACZ;EAEA,MAAMK,SAAS,GAAG5H,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAAC6H,UAAU,EAAEC,aAAa,CAAC,GAAG7H,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,SAAS8H,WAAW,CAACC,OAAO,EAC5B;IACE,IAAI7F,IAAI,GAAGlB,IAAI,CAACQ,KAAK,CAACqD,GAAG,CAACkD,OAAO,CAAC;IAClCF,aAAa,CAAC3F,IAAI,CAAC;EACrB;EAEA,SAAS8F,UAAU,GACnB;IACEC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,OAAO,GAAG,IAAI;IACzDF,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACC,OAAO,GAAG,IAAI;IAC1DF,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACE,KAAK,CAACC,OAAO,GAAG,MAAM;EAC9D;EAEA,SAASC,SAAS,GAAG;IACnB,IAAIpG,IAAI,GAAGlB,IAAI,CAACQ,KAAK,CAACqD,GAAG,CAAC+C,UAAU,CAAClD,EAAE,CAAC;IACxCxC,IAAI,CAACqC,UAAU,GAAGqD,UAAU,CAACrD,UAAU;IACvCrC,IAAI,CAAC4C,KAAK,GAAGC,QAAQ,CAAC7C,IAAI,CAACqC,UAAU,CAAC;IACtCvD,IAAI,CAACQ,KAAK,CAAC8E,MAAM,CAACpE,IAAI,CAAC;EACzB;EAEApC,SAAS,CAAC,MAAM;IACd,IAAGe,KAAK,CAACwH,OAAO,CAACE,KAAK,KAAK,OAAO,EAClC;MACEN,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACE,KAAK,CAACC,OAAO,GAAGxH,KAAK,CAACwH,OAAO,CAACE,KAAK;MAC/EtH,UAAU,GAAG,IAAIhB,OAAO,CAAC0H,SAAS,CAACa,OAAO,EAAExH,IAAI,EAAEG,OAAO,CAAC;MAE1DF,UAAU,CAACwH,EAAE,CAAC,uBAAuB,EAAE,UAAUC,MAAM,EAAE;QAEvD,IAAIC,QAAQ,GAAG,GAAG;QAClB,IAAIC,QAAQ,GAAG,CAAC;QAChB,IAAIC,WAAW,GAAGH,MAAM,CAACtF,UAAU,GAAGsF,MAAM,CAACI,KAAK;QAClD,IAAIvD,KAAK,GAAGwD,IAAI,CAACC,GAAG,CAACJ,QAAQ,EAAED,QAAQ,GAAGE,WAAW,CAAC;QACtDZ,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACE,KAAK,CAACa,UAAU,GAAG,yBAAyB,GAAE1D,KAAK,GAAE,iBAAiB;QAClH0C,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACgB,SAAS,GAAGH,IAAI,CAACI,KAAK,CAACN,WAAW,GAAG,GAAG,CAAC,GAAG,GAAG;MAE1F,CAAC,CAAC;MAEF5H,UAAU,CAACmI,IAAI,CAAC,6BAA6B,EAAE,YAAY;QAEzDnB,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACE,KAAK,CAACa,UAAU,GAAG,2CAA2C;QAC1GhB,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACgB,SAAS,GAAG,MAAM;QAC3DjB,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACE,KAAK,CAACiB,OAAO,GAAG,GAAG;QAE/DC,UAAU,CAAC,YAAY;UACrBrB,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACE,KAAK,CAACC,OAAO,GAAG,MAAM;QACpE,CAAC,EAAE,GAAG,CAAC;QAEPpH,UAAU,CAAC6E,UAAU,CAAC;UAACnD,OAAO,EAAE;YAACrB,OAAO,EAAE;UAAK;QAAC,CAAC,CAAC;MACpD,CAAC,CAAC;MAEFL,UAAU,CAACwH,EAAE,CAAC,aAAa,EAAE,UAAUC,MAAM,EAAE;QAC7C,IAAIA,MAAM,CAAClH,KAAK,CAAC,CAAC,CAAC,KAAKiE,SAAS,EACjC;UACE8D,KAAK,CAAC,gCAAgC,CAAC;QACzC,CAAC,MAED;UACEzB,WAAW,CAACY,MAAM,CAAClH,KAAK,CAAC,CAAC,CAAC,CAAC;UAC5ByG,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACE,KAAK,CAACC,OAAO,GAAG,OAAO;QAC/D;MAEF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACV,SAAS,EAAE9G,KAAK,CAAC,CAAC;EAEtB,oBACE;IAAA,wBACE,QAAC,SAAS;MACR,IAAI,EAAIG,IAAI,CAACQ,KAAM;MACnB,SAAS,EAAIoE,aAAc;MAC3B,KAAK,EAAIG,KAAM;MACf,MAAM,EAAIkB,SAAU;MACpB,IAAI,EAAIV,IAAK;MACb,IAAI,EAAIQ,IAAK;MACb,OAAO,EAAIlG,KAAK,CAACwH,OAAO,CAACmB;IAAU;MAAA;MAAA;MAAA;IAAA,QACnC,eAEF;MAAK,EAAE,EAAC,YAAY;MAAA,wBAClB;QAAM,EAAE,EAAC,gBAAgB;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAO,KAAC;QAAA;QAAA;QAAA;MAAA,QAAM,eACjD;QAAO,KAAK,EAAE;UAAC,QAAQ,EAAE;QAAM,CAAE;QAAA,uBAC/B;UAAA,UAEI/B,MAAM,CAACC,OAAO,CAACE,UAAU,CAACrD,UAAU,KAAKkB,SAAS,GAAG,CAAC,CAAC,GAAGmC,UAAU,CAACrD,UAAU,CAAC,CAAC0B,GAAG,CAAC,OAAawD,KAAK,KAAK;YAAA,IAAtB,CAACC,GAAG,EAAEC,GAAG,CAAC;YAC9F,oBACE;cAAA,wBACE;gBAAA,UAAKD;cAAG;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACd;gBAAA,uBACE;kBAAO,KAAK,EAAEC,GAAI;kBAAC,QAAQ,EAAKtD,CAAC,IAAK;oBAClCwB,aAAa,CAAC;sBAAC,GAAGD,UAAU;sBAAErD,UAAU,EAAE;wBAAC,GAAGqD,UAAU,CAACrD,UAAU;wBAAE,CAACmF,GAAG,GAAGrD,CAAC,CAACuD,MAAM,CAACC;sBAAK;oBAAC,CAAC,CAAC;kBAC/F;gBAAE;kBAAA;kBAAA;kBAAA;gBAAA;cACI;gBAAA;gBAAA;gBAAA;cAAA,QACL;YAAA,GAPEJ,KAAK;cAAA;cAAA;cAAA;YAAA,QAQT;UAET,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MAEE;QAAA;QAAA;QAAA;MAAA,QACF,eACR;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC,MAAM;QAAC,EAAE,EAAC,iBAAiB;QAAC,OAAO,EAAEnB;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,eAC5E;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC,OAAO;QAAC,EAAE,EAAC,kBAAkB;QAAC,OAAO,EAAEN;MAAW;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3E,eAEN;MAAK,EAAE,EAAG,kBAAkB;MAAA,wBAC1B;QAAK,SAAS,EAAC,cAAc;QAAC,GAAG,EAAEL;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,eAC/C;QAAK,EAAE,EAAC,kBAAkB;QAAA,uBACxB;UAAM,EAAE,EAAC,eAAe;UAAA,UAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA,QAC9B,eACN,QAAC,MAAM;QAAC,SAAS,EAAIT,cAAe;QAAC,SAAS,EAAIG;MAAe;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/D;EAAA,gBACL;AAEP,CAAC;AAAA,GAjcKzG,KAAK;AAAA,KAALA,KAAK;AAmcX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}